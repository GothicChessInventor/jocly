{"version":3,"sources":["jocly.embed.js"],"names":["gameId","gGame","window","addEventListener","receiveMessage","event","console","info","data","origin","originalEvent","url","URL","location","Reply","message","parent","postMessage","joclyEmbeddedGameId","replyId","type","id","area","document","getElementById","Jocly","createInternalGame","gameName","then","game","AddListener","Listen","Start","AttachElement","GameInitView","DisplayBoard","readyState","HumanTurn","StartMachine","options","finished","GetFinished","winner","move","GetMoveClass","ToString","ApplyMove","InvertWho","Object","assign","result","PlayMove","moveData"],"mappings":"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","file":"jocly.embed.js","sourcesContent":["/*    Copyright 2017 Jocly\n *\n *    This program is free software: you can redistribute it and/or  modify\n *    it under the terms of the GNU Affero General Public License, version 3,\n *    as published by the Free Software Foundation.\n *\n *    This program is distributed in the hope that it will be useful,\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *    GNU Affero General Public License for more details.\n *\n *    You should have received a copy of the GNU Affero General Public License\n *    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n *    As a special exception, the copyright holders give permission to link the\n *    code of portions of this program with the OpenSSL library under certain\n *    conditions as described in each individual source file and distribute\n *    linked combinations including the program with the OpenSSL library. You\n *    must comply with the GNU Affero General Public License in all respects\n *    for all of the code used other than as permitted herein. If you modify\n *    file(s) with this exception, you may extend this exception to your\n *    version of the file(s), but you are not obligated to do so. If you do not\n *    wish to do so, delete this exception statement from your version. If you\n *    delete this exception statement from all source files in the program,\n *    then also delete it in the license file.\n */\n\nvar gameId;\nvar gGame;\n\nwindow.addEventListener(\"message\", receiveMessage, false);\n\nfunction receiveMessage(event)\n{\n    console.info(\"embed receives message\",event.data);\n    var origin = event.origin || event.originalEvent.origin;\n    var url = new URL(window.location);\n    if(origin!=url.origin)\n        return;\n    function Reply(message) {\n        window.parent.postMessage({\n            joclyEmbeddedGameId: gameId,\n            replyId: event.data.replyId,\n            message: message\n        },\"*\");\n    }\n    var message = event.data.message;\n    switch(message.type) {\n        case \"init\":\n            gameId = message.id;\n            var area = document.getElementById(\"area\");\n            Jocly.createInternalGame(message.gameName).then((game) => {\n                gGame = game;\n                game.AddListener(Listen);\n                function Start() {\n                    game.AttachElement(area).then(()=>{\n                        game.GameInitView();\n                        game.DisplayBoard();\n                        Reply();\n                    });\n                }\n                if (document.readyState === \"complete\"\n                    || document.readyState === \"loaded\"\n                    || document.readyState === \"interactive\")\n                    Start();\n                else\n                    window.addEventListener(\"DOMContentLoaded\", () => {\n                        Start();\n                    });\n            });\n            break;\n        case \"humanTurn\":\n            gGame.HumanTurn();\n            break;\n        case \"machineTurn\":\n            gGame.StartMachine(message.options);\n            break;\n        case \"getFinished\":\n            var finished = gGame.GetFinished();\n            Reply({\n                finished: !!finished,\n                winner: finished\n            });\n            break;\n        case \"getMoveString\":\n            var move = new (gGame.GetMoveClass())(message.move);\n            Reply(move.ToString());\n            break;\n    }\n}\n\nfunction Listen(message) {\n    switch(message.type) {\n        case \"human-move\":\n            gGame.ApplyMove(message.move);\n            var finished = gGame.GetFinished();\n            if(!finished)\n                gGame.InvertWho();\n            gGame.DisplayBoard();\n            Object.assign(message,{\n                finished: !!finished,\n                winner: finished\n            });\n            break;\n        case \"machine-move\":\n            var move = message.result.move;\n            delete message.result.move;\n            gGame.PlayMove(move)\n                .then(()=>{\n                    var finished = gGame.GetFinished();\n                    if(!finished)\n                        gGame.InvertWho();\n                    gGame.DisplayBoard();\n                    window.parent.postMessage({\n                        joclyEmbeddedGameId: gameId,\n                        message: {\n                            type: \"machine-move\",\n                            moveData: message.result,\n                            move: move,\n                            finished: !!finished,\n                            winner: finished\n                        }\n                    },\"*\");\n                });\n            return;\n    }\n    window.parent.postMessage({\n        joclyEmbeddedGameId: gameId,\n        message: message\n    },\"*\");\n}\n"]}