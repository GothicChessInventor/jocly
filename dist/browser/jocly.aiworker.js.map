{"version":3,"sources":["jocly.aiworker.js"],"names":["window","self","Jocly","onmessage","e","t0","Date","now","message","data","options","importTime","type","scripts","baseURL","exports","importScripts","apply","createInternalGame","gameName","then","game","mBoard","mMoves","Load","playedMoves","mDoneCallback","doneData","postMessage","mProgressCallback","percent","level","mTopLevel","maxDepth","mStartTime","getTime","mExploredCount","mPickedMoveIndex","mBestMoves","mContexts","mDuration","mAborted","mRandomSeed","randomSeed","isNaN","parseInt","mOptions","levelOptions","levelOptionsSaved","JSON","parse","stringify","JocUtil","extend","algo","JoclyUCT","startMachine","Engine","potential","Run"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAIA,SAASC,IAAb;;AAEA,IAAIC,KAAJ;;AAEAC,YAAY,mBAASC,CAAT,EAAY;AACpB,QAAIC,KAAKC,KAAKC,GAAL,EAAT;AACA,QAAIC,UAAUJ,EAAEK,IAAhB;AACA,QAAIC,UAAUF,QAAQE,OAAtB;AACA,QAAIC,aAAa,CAAjB;AACA,YAAOH,QAAQI,IAAf;AACI,aAAK,MAAL;AACI,gBAAIC,UAAU,CACVL,QAAQM,OAAR,GAAgB,eADN,CAAd;AAGAZ,oBAAQD,KAAKc,OAAL,GAAe,EAAvB;AACAC,0BAAcC,KAAd,CAAoB,IAApB,EAAyBJ,OAAzB;AACAF,yBAAaL,KAAKC,GAAL,KAAaF,EAA1B;AACA;AACJ,aAAK,MAAL;AACIH,kBAAMgB,kBAAN,CAAyBV,QAAQW,QAAjC,EAA0CT,OAA1C,EAAmDU,IAAnD,CAAwD,UAACC,IAAD,EAAQ;AAC5DA,qBAAKC,MAAL,CAAYC,MAAZ,GAAqB,EAArB;AACAF,qBAAKG,IAAL,CAAU;AACNC,iCAAajB,QAAQiB;AADf,iBAAV;AAGAJ,qBAAKK,aAAL,GAAqB,UAASC,QAAT,EAAmB;AACpCC,gCAAY;AACRhB,8BAAM,MADE;AAERH,8BAAMkB;AAFE,qBAAZ;AAIH,iBALD;AAMAN,qBAAKQ,iBAAL,GAAyB,UAASC,OAAT,EAAkB;AACvCF,gCAAY;AACRhB,8BAAM,UADE;AAERkB,iCAASA;AAFD,qBAAZ;AAIH,iBALD;AAMA,oBAAG,OAAOpB,QAAQqB,KAAf,IAAuB,WAA1B,EACIV,KAAKW,SAAL,GAAetB,QAAQqB,KAAvB;AACJ,oBAAG,OAAOrB,QAAQuB,QAAf,IAA0B,WAA7B,EACIZ,KAAKW,SAAL,GAAetB,QAAQuB,QAAvB;AACJZ,qBAAKa,UAAL,GAAkB,IAAI5B,IAAJ,GAAW6B,OAAX,EAAlB;AACAd,qBAAKe,cAAL,GAAsB,CAAtB;AACAf,qBAAKgB,gBAAL,GAAwB,CAAxB;AACAhB,qBAAKiB,UAAL,GAAkB,EAAlB;AACAjB,qBAAKkB,SAAL,GAAiB,EAAjB;AACAlB,qBAAKmB,SAAL,GAAiB,CAAjB;AACAnB,qBAAKoB,QAAL,GAAgB,KAAhB;AACApB,qBAAKqB,WAAL,GAAmB,CAAnB;AACA,oBAAGhC,QAAQiC,UAAR,IAAsB,CAACC,MAAMC,SAASnC,QAAQiC,UAAjB,CAAN,CAA1B,EACItB,KAAKqB,WAAL,GAAmBG,SAASnC,QAAQiC,UAAjB,CAAnB;AACJ,oBAAGtB,KAAKyB,QAAL,CAAcC,YAAjB,EAA+B;AAC3B1B,yBAAKyB,QAAL,CAAcE,iBAAd,GAAgCC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAe9B,KAAKyB,QAAL,CAAcC,YAA7B,CAAX,CAAhC;AACA,wBAAGrC,QAAQqB,KAAX,EACIqB,QAAQC,MAAR,CAAehC,KAAKyB,QAAL,CAAcC,YAA7B,EAA0CrC,QAAQqB,KAAlD;AACP;AACD,wBAAO3B,EAAEK,IAAF,CAAO6C,IAAd;AACI,yBAAK,KAAL;AACIC,iCAASC,YAAT,CAAsBnC,IAAtB,EAA2BX,OAA3B;AACA;AACJ,yBAAK,YAAL;AACIW,6BAAKoC,MAAL,CAAYpC,KAAKC,MAAjB,EAAyBD,KAAKW,SAA9B,EAAyC,KAAzC,EAAgD,CAAhD,EAAmDtB,QAAQgD,SAA3D,EADJ,CAC2E;AACvErC,6BAAKsC,GAAL;AACA;AAPR;AASH,aA7CD;AA8CA;AAxDR;AA0DA;AACH,CAhED","file":"jocly.aiworker.js","sourcesContent":["/*    Copyright 2017 Jocly\n *\n *    This program is free software: you can redistribute it and/or  modify\n *    it under the terms of the GNU Affero General Public License, version 3,\n *    as published by the Free Software Foundation.\n *\n *    This program is distributed in the hope that it will be useful,\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *    GNU Affero General Public License for more details.\n *\n *    You should have received a copy of the GNU Affero General Public License\n *    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n *    As a special exception, the copyright holders give permission to link the\n *    code of portions of this program with the OpenSSL library under certain\n *    conditions as described in each individual source file and distribute\n *    linked combinations including the program with the OpenSSL library. You\n *    must comply with the GNU Affero General Public License in all respects\n *    for all of the code used other than as permitted herein. If you modify\n *    file(s) with this exception, you may extend this exception to your\n *    version of the file(s), but you are not obligated to do so. If you do not\n *    wish to do so, delete this exception statement from your version. If you\n *    delete this exception statement from all source files in the program,\n *    then also delete it in the license file.\n */\n\nvar window = self;\n\nvar Jocly;\n\nonmessage = function(e) {\n    var t0 = Date.now();\n    var message = e.data;\n    var options = message.options;\n    var importTime = 0;\n    switch(message.type) {\n        case \"Init\":\n            var scripts = [\n                message.baseURL+\"jocly.core.js\",\n            ];\n            Jocly = self.exports = {};\n            importScripts.apply(null,scripts);\n            importTime = Date.now() - t0;\n            break;\n        case \"Play\":\n            Jocly.createInternalGame(message.gameName,options).then((game)=>{\n                game.mBoard.mMoves = [];\n                game.Load({\n                    playedMoves: message.playedMoves\n                });\n                game.mDoneCallback = function(doneData) {\n                    postMessage({\n                        type: \"Done\",\n                        data: doneData\n                    });\n                }\n                game.mProgressCallback = function(percent) {\n                    postMessage({\n                        type: \"Progress\",\n                        percent: percent\n                    });\n                }\n                if(typeof(options.level)!=\"undefined\")\n                    game.mTopLevel=options.level;\n                if(typeof(options.maxDepth)!=\"undefined\")\n                    game.mTopLevel=options.maxDepth;\n                game.mStartTime = new Date().getTime();\n                game.mExploredCount = 0;\n                game.mPickedMoveIndex = 0;\n                game.mBestMoves = [];\n                game.mContexts = [];\n                game.mDuration = 0;\n                game.mAborted = false;\n                game.mRandomSeed = 0;\n                if(options.randomSeed && !isNaN(parseInt(options.randomSeed)))\n                    game.mRandomSeed = parseInt(options.randomSeed);\n                if(game.mOptions.levelOptions) {\n                    game.mOptions.levelOptionsSaved=JSON.parse(JSON.stringify(game.mOptions.levelOptions));\n                    if(options.level)\n                        JocUtil.extend(game.mOptions.levelOptions,options.level);\n                }\n                switch(e.data.algo) {\n                    case \"uct\":\n                        JoclyUCT.startMachine(game,options);\n                        break;\n                    case \"alpha-beta\":\n                        game.Engine(game.mBoard, game.mTopLevel, false, 0, options.potential); // start algo\n                        game.Run();\n                        break;\n                }\n            });\n            break;\n    }\n    //console.info(\"initTime\",Date.now()-e.data.t0);\n}"]}