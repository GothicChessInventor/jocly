"use strict";var _slicedToArray=function(){function e(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{!n&&s.return&&s.return()}finally{if(o)throw i}}return r}return function(t,r){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,r);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();!function(){function e(e,t,r,n,o){var i=function(){this.g={}};Object.assign(i.prototype,r.Game.prototype,n.model.Game);var a=function(){};Object.assign(a.prototype,r.Board.prototype,n.model.Board),i.prototype.mBoardClass=a;var s=function(e){this.Init(e)};Object.assign(s.prototype,r.Move.prototype,n.model.Move),i.prototype.mMoveClass=s,i.prototype.config=o.config,"undefined"!=typeof SystemJS&&(i.prototype.config.baseURL=SystemJS.getConfig().baseURL,i.prototype.config.view.fullPath=SystemJS.getConfig().baseURL+"games/"+t.module),i.prototype.module=t.module,i.prototype.name=e;var m={game:o.config.model.gameOptions,view:o.config.view};c[e]={gameClass:i,initArgs:m};var u=new i;return u.Init(m),u}function t(e,t){var i=c[e];if(i){return new Promise(function(e,t){var r=new i.gameClass;r.Init(i.initArgs),e(r)})}return"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?n(e,t):"undefined"!=typeof process&&"node"===process.title?r(e,t):o(e,t)}function r(t,r){Date.now();return r=r||{},new Promise(function(r,n){var o=require("./jocly-allgames.js").games,i=o[t];if(!i)return n(new Error("Game "+t+" not found"));var a=require("./jocly.game.js"),s=require("./games/"+i.module+"/"+t+"-model.js"),m=require("./games/"+i.module+"/"+t+"-config.js");r(e(t,i,a,s,m))})}function n(t,r){Date.now();return r=r||{},new Promise(function(r,n){importScripts("jocly-allgames.js");var o=exports.games,i=o[t];if(!i)return n(new Error("Game "+t+" not found"));var a=exports,s=exports={};importScripts("jocly.game.js");var m=exports={};importScripts("games/"+i.module+"/"+t+"-model.js");var u=exports={};importScripts("games/"+i.module+"/"+t+"-config.js"),exports=a,r(e(t,i,s,m,u))})}function o(t,r){return r=r||{},new Promise(function(r,n){exports.listGames().then(function(o){var i=o[t];if(!i)return n(new Error("Game "+t+" not found"));var a=[SystemJS.import("jocly.game.js"),SystemJS.import("games/"+i.module+"/"+t+"-model.js"),SystemJS.import("games/"+i.module+"/"+t+"-config.js")];Promise.all(a).then(function(n){var o=_slicedToArray(n,3),a=o[0],s=o[1],m=o[2],u=e(t,i,a,s,m);r(u)},function(e){n(e)})},n)})}function i(e){return new Promise(function(r,n){t(e).then(function(t){var n=new a(e,t);r(n)},function(e){n(e)})})}function a(e,t){this.gameName=e,this.game=t,this.iframe=null,this.id=++l,g[this.id]=this}function s(e){var t=e.data,r=g[t.joclyEmbeddedGameId];if(r){var n=t.replyId;if(n){var o=d[n];if(o)if(delete d[n],"error"==t.message.type){var i=new Error(t.message.error.message,t.message.error.fileName,t.message.error.lineNumber);o(i)}else o(null,t.message)}else"machine-progress"==t.message.type&&r.machineProgressListener&&r.machineProgressListener(t.message.progress)}}function m(e,t,r){var n={message:t};if(r){var o=++p;n.replyId=o,d[o]=r}try{e.iframe.contentWindow.postMessage(n,"*")}catch(e){console.error("Message",t,"could not be posted:",e)}}function u(e,t,r){return r=Array.from(r||[]),new Promise(function(n,o){m(e,{type:"method",id:e.id,methodName:t,args:r},function(e,t){e?o(e):n.apply(null,t&&t.args||[])})})}var c={},h="browser";"undefined"!=typeof process&&"node"===process.title?h="node":"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&(h="worker"),exports.listGames=function(){return new Promise(function(e,t){"undefined"!=typeof SystemJS?SystemJS.import("jocly-allgames.js").then(function(t){var r=t.games;if("undefined"!=typeof SystemJS){r={};var n=SystemJS.getConfig().baseURL;for(var o in t.games){var i=Object.assign({},t.games[o]);i.thumbnail=n+"games/"+i.module+"/"+i.thumbnail,r[o]=i}}e(r)},function(e){console.warn("Could not load Jocly games",e),t(e)}):e(require("./jocly-allgames.js").games)})};var f=!1,g={},p=0,d={},l=0;a.prototype.attachElement=function(e,t){if("node"==h)return Promise.reject(new Error("attachElement(): not supported in node.js"));if(!this.game||this.iframe)return Promise.reject(new Error("attachElement(): match is already attached"));t=t||{};var r=this;return new Promise(function(t,n){f||(f=!0,window.addEventListener("message",s)),r.element=e;var o=document.createElement("iframe"),i={name:"jocly-embedded-"+r.id,frameborder:0,src:SystemJS.getConfig().baseURL+"jocly.embed.html",width:"100%",height:"100%"};Object.keys(i).forEach(function(e){o.setAttribute(e,i[e])}),Object.assign(o.style,{position:"absolute",top:0,right:0,bottom:0,left:0,whiteSpace:"normal"});var a=document.createElement("div");Object.assign(a.style,{position:"relative",whiteSpace:"nowrap",width:"100%",height:"100%"}),a.appendChild(o),e.appendChild(a),r.iframe=o,o.onload=function(){m(r,{type:"init",id:r.id,gameName:r.gameName,playedMoves:r.game.mPlayedMoves},function(e,o){e?n(e):(r.game=null,t())})}})},a.prototype.detachElement=function(){if("node"==h)return Promise.reject(new Error("detachElement(): not supported in node.js"));if(this.game||!this.iframe)return Promise.reject(new Error("detachElement(): match is not attached"));var e=this;return new Promise(function(r,n){Promise.all([t(e.gameName),u(e,"getPlayedMoves")]).then(function(t){var r=_slicedToArray(t,2),n=r[0],o=r[1];return e.game=n,n.Load({playedMoves:o}),u(e,"destroy")}).then(function(){for(;e.element.firstChild;)e.element.removeChild(e.element.firstChild);delete e.element,delete e.iframe,r()}).catch(n)})},a.prototype.getTurn=function(){if(this.game){var e=this;return new Promise(function(t,r){t(e.game.GetWho())})}return u(this,"getTurn",arguments)},a.prototype.getMoveString=function(e){if(this.game){var t=this;return new Promise(function(r,n){r(Array.isArray(e)?e.map(function(e){return t.game.CreateMove(e).ToString()}):t.game.CreateMove(e).ToString())})}return u(this,"getMoveString",arguments)},a.prototype.pickMove=function(e){if(this.game){var t=this;return new Promise(function(r,n){t.game.mBoard.mMoves&&0!=t.game.mBoard.mMoves.length||t.game.mBoard.GenerateMoves(t.game),r(t.game.GetBestMatchingMove(e,t.game.mBoard.mMoves))})}return u(this,"pickMove",arguments)},a.prototype.playMove=function(e){if("node"==h||!this.iframe&&!this.area)return this.applyMove(e);if(this.game){var t=this;return new Promise(function(r,n){t.game.PlayMove(e).then(function(){var e=t.game.GetFinished();t.game.InvertWho(),t.game.DisplayBoard(),r({finished:!!e,winner:e})}).catch(function(e){n(e)})})}return u(this,"playMove",arguments)},a.prototype.applyMove=function(e){if(this.game){var t=this;return new Promise(function(r,n){t.game.ApplyMove(e);var o=t.game.GetFinished();t.game.InvertWho(),t.area&&t.game.DisplayBoard(),r({finished:!!o,winner:o})})}return u(this,"applyMove",arguments)},a.prototype.destroy=function(e){var t=this;if(this.game){return new Promise(function(e,r){t.area&&t.game.GameDestroyView(),e()})}return this.detachElement().then(function(){delete g[t.id]})},a.prototype.getPlayedMoves=function(){if(this.game){var e=this;return new Promise(function(t,r){t(Array.from(e.game.mPlayedMoves))})}return u(this,"getPlayedMoves")},a.prototype.userTurn=function(){if("node"==h)return Promise.reject(new Error("userTurn(): not supported in node.js"));if(!this.area&&!this.iframe)return Promise.reject(new Error("userTurn(): match is not attached to DOM element"));if(this.game){var e,t=function(){r.game.HumanMove=e,delete r.userTurnReject},r=this;return new Promise(function(t,n){var o;o=r.userTurnReject?r.abortUserTurn():new Promise(function(e){e()}),o.then(function(){},function(){}).then(function(){function o(e){r.game.ApplyMove(e);var n=r.game.GetFinished();r.game.InvertWho(),r.game.DisplayBoard(),t({move:e,finished:!!n,winner:n})}r.userTurnReject=n,e=r.game.HumanMove,r.game.HumanMove=o,r.game.HumanTurn()})}).then(function(e){return t(),e}).catch(function(e){throw t(),e})}return u(this,"userTurn")},a.prototype.abortUserTurn=function(e){if("node"==h)return Promise.reject(new Error("abortUserTurn(): not supported in node.js"));if(!this.area&&!this.iframe)return Promise.reject(new Error("abortUserTurn(): match is not attached to DOM element"));if(this.game){var t=this;if(!this.userTurnReject)return e?Promise.reject(new Error("abortUserTurn(): not in user input mode")):Promise.resolve();return new Promise(function(e,r){t.game.HumanTurnEnd();var n=t.userTurnReject;delete t.userTurnReject,n(new Error("User input aborted")),e()})}return u(this,"abortUserTurn",arguments)},a.prototype.machineSearch=function(e){var t=this;if(this.game){var r=function(){t.game.MachineMove=n,t.game.MachineProgress=o,delete t.machineSearchReject};e=Object.assign({level:t.game.config.model.levels[0],threaded:!0},e);var n,o;return new Promise(function(r,i){var a;a=t.machineSearchReject?t.abortMachineSearch():new Promise(function(e){e()}),a.then(function(){},function(){}).then(function(){function a(e){var n=e.move;delete e.move;var o=t.game.GetFinished();r({move:n,finished:!!o,winner:o})}function s(e){t.area&&window.parent.postMessage({joclyEmbeddedGameId:t.id,message:{type:"machine-progress",progress:e}},"*")}t.machineSearchReject=i,n=t.game.MachineMove,t.game.MachineMove=a,o=t.game.MachineProgress,t.game.MachineProgress=s,t.game.StartMachine(e)})}).then(function(e){return r(),e}).catch(function(e){throw r(),e})}var i=function(){delete t.machineProgressListener};return e=e||{},t.machineProgressListener=e.progress||function(){},delete e.progress,u(this,"machineSearch",[e]).then(function(e){return i(),e}).catch(function(e){throw i(),e})},a.prototype.abortMachineSearch=function(e){if(this.game){var t=this;if(!this.machineSearchReject)return e?Promise.reject(new Error("abortMachineSearch(): machine not searching")):Promise.resolve();return new Promise(function(e,r){t.game.StopThreadedMachine();var n=t.machineSearchReject;delete t.machineSearchReject,n(new Error("Machine search aborted")),e()})}return u(this,"abortMachineSearch")},a.prototype.setViewOptions=function(e){if("node"==h)return Promise.reject(new Error("setViewOptions(): not supported in node.js"));if(!this.area&&!this.iframe)return Promise.reject(new Error("setViewOptions(): match is not attached to DOM element"));if(this.game){var t=this;return new Promise(function(r,n){t.game.GameDestroyView();var o={mSkin:"skin",mNotation:"notation",mSounds:"sounds",mShowMoves:"showMoves",mAutoComplete:"autoComplete"};for(var i in o)void 0!==e[o[i]]&&(t.game[i]=e[o[i]]);t.game.GameInitView(),r()})}return u(this,"setViewOptions",arguments)},a.prototype.getViewOptions=function(){if(this.game){var e=this;return new Promise(function(t,r){var n={skin:e.game.mSkin,sounds:e.game.mSounds};e.game.mViewOptions.useNotation&&(n.notation=!!e.game.mNotation),e.game.mViewOptions.useShowMoves&&(n.showMoves=!!e.game.mShowMoves),e.game.mViewOptions.useAutoComplete&&(n.autoComplete=!!e.game.mAutoComplete),t(n)})}return u(this,"getViewOptions")},a.prototype.getFinished=function(){if(this.game){var e=this;return new Promise(function(t,r){var n=e.game.GetFinished();t({finished:!!n,winner:n})})}return u(this,"getFinished")},a.prototype.rollback=function(e){if(this.game){var t=this;return new Promise(function(r,n){e<0&&(e=t.game.mPlayedMoves.length+e),e=Math.max(0,Math.min(e,t.game.mPlayedMoves.length));var o=t.game.mPlayedMoves;t.game.BackTo(e,o),t.area&&t.game.DisplayBoard(),r()})}return u(this,"rollback",arguments)},a.prototype.otherPlayer=function(e){return new Promise(function(t,r){1==e?t(-1):e==-1?t(1):r(new Error("otherPlayer: invalid input"))})},a.prototype.save=function(){if(this.game){var e=this;return new Promise(function(t,r){t({playedMoves:Array.from(e.game.mPlayedMoves)})})}return u(this,"save")},a.prototype.load=function(e){if(this.game){var t=this;return new Promise(function(r,n){t.game.Load(e),t.area&&t.game.DisplayBoard(),r()})}return u(this,"load",arguments)},a.prototype.getConfig=function(){if(this.game){var e=this;return new Promise(function(t,r){t(e.game.config)})}return u(this,"getConfig")},a.prototype.viewAs=function(e){if("node"==h)return Promise.reject(new Error("viewAs(): not supported in node.js"));if(!this.area&&!this.iframe)return Promise.reject(new Error("viewAs(): match is not attached to DOM element"));if(this.game){var t=this;return new Promise(function(r,n){t.game.GameDestroyView(),t.game.mViewAs=e,t.game.GameInitView(),t.game.DisplayBoard(),r()})}return u(this,"viewAs",arguments)},a.prototype.viewControl=function(e,t){if("node"==h)return Promise.reject(new Error("viewAs(): not supported in node.js"));if(!this.area&&!this.iframe)return Promise.reject(new Error("viewAs(): match is not attached to DOM element"));if(this.game){return this.game.ViewControl(e,t)}return u(this,"viewControl",arguments)},exports.createMatch=i,exports._createInternalGame=t,exports.PLAYER_A=1,exports.PLAYER_B=-1,exports.DRAW=2}();