"use strict";function CreateGame(e,r,o,t,n){var a=function(){this.g={}};Object.assign(a.prototype,o.Game.prototype,t.model.Game);var i=function(){};Object.assign(i.prototype,o.Board.prototype,t.model.Board),a.prototype.mBoardClass=i;var s=function(e){this.Init(e)};Object.assign(s.prototype,o.Move.prototype,t.model.Move),a.prototype.mMoveClass=s,a.prototype.config=n.config,"undefined"!=typeof SystemJS&&(a.prototype.config.baseURL=SystemJS.getConfig().baseURL,a.prototype.config.view.fullPath=SystemJS.getConfig().baseURL+"games/"+r.module),a.prototype.module=r.module,a.prototype.name=e;var m={game:n.config.model.gameOptions,view:n.config.view};gameClassCache[e]={gameClass:a,initArgs:m};var l=new a;return l.Init(m),l}function NodeCreateGame(e,r){Date.now();return r=r||{},new Promise(function(r,o){var t=require("./jocly-allgames.js").games,n=t[e];if(!n)return o(new Error("Game "+e+" not found"));var a=require("./jocly.game.js"),i=require("./games/"+n.module+"/"+e+"-model.js"),s=require("./games/"+n.module+"/"+e+"-config.js");r(CreateGame(e,n,a,i,s))})}function WorkerCreateGame(e,r){Date.now();return r=r||{},new Promise(function(r,o){importScripts("jocly-allgames.js");var t=exports.games,n=t[e];if(!n)return o(new Error("Game "+e+" not found"));var a=exports,i=exports={};importScripts("jocly.game.js");var s=exports={};importScripts("games/"+n.module+"/"+e+"-model.js");var m=exports={};importScripts("games/"+n.module+"/"+e+"-config.js"),exports=a,r(CreateGame(e,n,i,s,m))})}function BrowserCreateGame(e,r){return r=r||{},new Promise(function(r,o){exports.listGames().then(function(t){var n=t[e];if(!n)return o(new Error("Game "+e+" not found"));var a=[SystemJS.import("jocly.game.js"),SystemJS.import("games/"+n.module+"/"+e+"-model.js"),SystemJS.import("games/"+n.module+"/"+e+"-config.js")];Promise.all(a).then(function(o){var t=_slicedToArray(o,3),a=t[0],i=t[1],s=t[2],m=CreateGame(e,n,a,i,s);r(m)},function(e){o(e)})},o)})}var _slicedToArray=function(){function e(e,r){var o=[],t=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(t=(i=s.next()).done)&&(o.push(i.value),!r||o.length!==r);t=!0);}catch(e){n=!0,a=e}finally{try{!t&&s.return&&s.return()}finally{if(n)throw a}}return o}return function(r,o){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return e(r,o);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();if("undefined"==typeof WorkerGlobalScope||!(self instanceof WorkerGlobalScope))var GameProxy=require("./jocly.proxy.js");exports.listGames=function(){return new Promise(function(e,r){"undefined"!=typeof SystemJS?SystemJS.import("jocly-allgames.js").then(function(r){if("undefined"!=typeof SystemJS){var o=SystemJS.getConfig().baseURL;for(var t in r.games){var n=r.games[t];n.thumbnail=o+"games/"+n.module+"/"+n.thumbnail}}e(r.games)},function(e){console.warn("Could not load Jocly games",e),r(e)}):e(require("./jocly-allgames.js").games)})};var gameClassCache={};exports.createInternalGame=function(e,r){var o=gameClassCache[e];if(o){return new Promise(function(e,r){var t=new o.gameClass;t.Init(o.initArgs),e(t)})}return"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?WorkerCreateGame(e,r):"undefined"!=typeof process&&"node"===process.title?NodeCreateGame(e,r):BrowserCreateGame(e,r)},exports.createGame=function(e){var r,o;return"undefined"!=typeof Element&&arguments[1]instanceof Element?(o=arguments[1],r=arguments[2]):r=arguments[1],new Promise(function(t,n){GameProxy.createGame(e,r).then(function(e){o?e.attachElement(o,r).then(function(){t(e)},n):t(e)},n)})};