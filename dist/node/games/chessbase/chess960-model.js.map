{"version":3,"names":[],"mappings":"","sources":["chess960-model.js"],"sourcesContent":["\n(function() {\n\t\n\tvar geometry = Model.Game.cbBoardGeometryGrid(8,8);\n\t\n\tModel.Game.cbDefine = function() {\n\t\t\n\t\treturn {\n\t\t\t\n\t\t\tgeometry: geometry,\n\t\t\t\n\t\t\tpieceTypes: {\n\n\t\t\t\t0: {\n\t\t\t\t\tname: 'pawn-w',\n\t\t\t\t\taspect: 'pawn',\n\t\t\t\t\tgraph: this.cbPawnGraph(geometry,1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tepCatch: true,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t1: {\n\t\t\t\t\tname: 'ipawn-w',\n\t\t\t\t\taspect: 'pawn',\n\t\t\t\t\tgraph: this.cbInitialPawnGraph(geometry,1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tinitial: [{s:1,p:8},{s:1,p:9},{s:1,p:10},{s:1,p:11},{s:1,p:12},{s:1,p:13},{s:1,p:14},{s:1,p:15}],\n\t\t\t\t\tepTarget: true,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t2: {\n\t\t\t\t\tname: 'pawn-b',\n\t\t\t\t\taspect: 'pawn',\n\t\t\t\t\tgraph: this.cbPawnGraph(geometry,-1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tepCatch: true,\n\t\t\t\t},\n\n\t\t\t\t3: {\n\t\t\t\t\tname: 'ipawn-b',\n\t\t\t\t\taspect: 'pawn',\n\t\t\t\t\tgraph: this.cbInitialPawnGraph(geometry,-1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tinitial: [{s:-1,p:48},{s:-1,p:49},{s:-1,p:50},{s:-1,p:51},{s:-1,p:52},{s:-1,p:53},{s:-1,p:54},{s:-1,p:55}],\n\t\t\t\t\tepTarget: true,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t4: {\n\t\t\t\t\tname: 'knight',\n\t\t\t\t\tgraph: this.cbKnightGraph(geometry),\n\t\t\t\t\tvalue: 2.9,\n\t\t\t\t\tabbrev: 'N',\n\t\t\t\t\tinitial: [{s:1,p:1},{s:1,p:6},{s:-1,p:57},{s:-1,p:62}],\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t5: {\n\t\t\t\t\tname: 'bishop',\n\t\t\t\t\tgraph: this.cbBishopGraph(geometry),\n\t\t\t\t\tvalue: 3.1,\n\t\t\t\t\tabbrev: 'B',\n\t\t\t\t\tinitial: [{s:1,p:2},{s:1,p:5},{s:-1,p:58},{s:-1,p:61}],\n\t\t\t\t},\n\n\t\t\t\t6: {\n\t\t\t\t\tname: 'rook',\n\t\t\t\t\tgraph: this.cbRookGraph(geometry),\n\t\t\t\t\tvalue: 5,\n\t\t\t\t\tabbrev: 'R',\n\t\t\t\t\tinitial: [{s:1,p:0},{s:1,p:7},{s:-1,p:56},{s:-1,p:63}],\n\t\t\t\t\tcastle: true,\n\t\t\t\t},\n\n\t\t\t\t7: {\n\t\t\t\t\tname: 'queen',\n\t\t\t\t\tgraph: this.cbQueenGraph(geometry),\n\t\t\t\t\tvalue: 9,\n\t\t\t\t\tabbrev: 'Q',\n\t\t\t\t\tinitial: [{s:1,p:3},{s:-1,p:59}],\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t8: {\n\t\t\t\t\tname: 'king',\n\t\t\t\t\tisKing: true,\n\t\t\t\t\tgraph: this.cbKingGraph(geometry),\n\t\t\t\t\tabbrev: 'K',\n\t\t\t\t\tinitial: [{s:1,p:4},{s:-1,p:60}],\n\t\t\t\t},\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tpromote: function(aGame,piece,move) {\n\t\t\t\tif(piece.t==1)\n\t\t\t\t\treturn [0];\n\t\t\t\telse if(piece.t==3)\n\t\t\t\t\treturn [2];\n\t\t\t\telse if(piece.t==0 && geometry.R(move.t)==7)\n\t\t\t\t\treturn [4,5,6,7];\n\t\t\t\telse if(piece.t==2 && geometry.R(move.t)==0)\n\t\t\t\t\treturn [4,5,6,7];\n\t\t\t\treturn [];\n\t\t\t},\n\n\t\t\tcastle: {\n\t\t\t\t\"1/0\": {k:[2],r:[1,2,3],n:\"O-O-O\"},\n\t\t\t\t\"2/0\": {k:[2],r:[1,2,3],n:\"O-O-O\"},\n\t\t\t\t\"3/0\": {k:[2],r:[1,2,3],n:\"O-O-O\"},\n\t\t\t\t\"4/0\": {k:[3,2],r:[1,2,3],n:\"O-O-O\"},\n\t\t\t\t\"5/0\": {k:[4,3,2],r:[1,2,3],n:\"O-O-O\"},\n\t\t\t\t\"6/0\": {k:[5,4,3,2],r:[1,2,3],n:\"O-O-O\"},\n\t\t\t\t\"2/1\": {k:[2],r:[2,3],n:\"O-O-O\"},\n\t\t\t\t\"3/1\": {k:[2],r:[2,3],n:\"O-O-O\"},\n\t\t\t\t\"4/1\": {k:[3,2],r:[2,3],n:\"O-O-O\"},\n\t\t\t\t\"5/1\": {k:[4,3,2],r:[2,3],n:\"O-O-O\"},\n\t\t\t\t\"6/1\": {k:[5,4,3,2],r:[2,3],n:\"O-O-O\"},\n\t\t\t\t\"3/2\": {k:[2],r:[3],n:\"O-O-O\"},\n\t\t\t\t\"4/2\": {k:[3,2],r:[3],n:\"O-O-O\"},\n\t\t\t\t\"5/2\": {k:[4,3,2],r:[3],n:\"O-O-O\"},\n\t\t\t\t\"6/2\": {k:[5,4,3,2],r:[3],n:\"O-O-O\"},\n\t\t\t\t\"4/3\": {k:[3,2],r:[3],n:\"O-O-O\"},\n\t\t\t\t\"5/3\": {k:[4,3,2],r:[3],n:\"O-O-O\"},\n\t\t\t\t\"6/3\": {k:[5,4,3,2],r:[3],n:\"O-O-O\"},\n\t\t\t\t\"5/4\": {k:[4,3,2],r:[3],n:\"O-O-O\"},\n\t\t\t\t\"6/4\": {k:[5,4,3,2],r:[3],n:\"O-O-O\"},\n\t\t\t\t\"6/5\": {k:[5,4,3,2],r:[4,3],n:\"O-O-O\"},\n\n\t\t\t\t\"1/7\": {k:[2,3,4,5,6],r:[6,5],n:\"O-O\"},\n\t\t\t\t\"2/7\": {k:[3,4,5,6],r:[6,5],n:\"O-O\"},\n\t\t\t\t\"3/7\": {k:[4,5,6],r:[6,5],n:\"O-O\"},\n\t\t\t\t\"4/7\": {k:[5,6],r:[6,5],n:\"O-O\"},\n\t\t\t\t\"5/7\": {k:[6],r:[6,5],n:\"O-O\"},\n\t\t\t\t\"6/7\": {k:[6],r:[6,5],n:\"O-O\"},\n\t\t\t\t\"1/6\": {k:[2,3,4,5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"2/6\": {k:[3,4,5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"3/6\": {k:[4,5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"4/6\": {k:[5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"5/6\": {k:[6],r:[5],n:\"O-O\"},\n\t\t\t\t\"1/5\": {k:[2,3,4,5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"2/5\": {k:[3,4,5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"3/5\": {k:[4,5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"4/5\": {k:[5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"1/4\": {k:[2,3,4,5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"2/4\": {k:[3,4,5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"3/4\": {k:[4,5,6],r:[5],n:\"O-O\"},\n\t\t\t\t\"1/3\": {k:[2,3,4,5,6],r:[4,5],n:\"O-O\"},\n\t\t\t\t\"2/3\": {k:[3,4,5,6],r:[4,5],n:\"O-O\"},\n\t\t\t\t\"1/2\": {k:[2,3,4,5,6],r:[3,4,5],n:\"O-O\"},\n\n\t\t\t\t\"57/56\": {k:[58],r:[57,58,59],n:\"O-O-O\"},\n\t\t\t\t\"58/56\": {k:[58],r:[57,58,59],n:\"O-O-O\"},\n\t\t\t\t\"59/56\": {k:[58],r:[57,58,59],n:\"O-O-O\"},\n\t\t\t\t\"60/56\": {k:[59,58],r:[57,58,59],n:\"O-O-O\"},\n\t\t\t\t\"61/56\": {k:[60,59,58],r:[57,58,59],n:\"O-O-O\"},\n\t\t\t\t\"62/56\": {k:[61,60,59,58],r:[57,58,59],n:\"O-O-O\"},\n\t\t\t\t\"58/57\": {k:[58],r:[58,59],n:\"O-O-O\"},\n\t\t\t\t\"59/57\": {k:[58],r:[58,59],n:\"O-O-O\"},\n\t\t\t\t\"60/57\": {k:[59,58],r:[58,59],n:\"O-O-O\"},\n\t\t\t\t\"61/57\": {k:[60,59,58],r:[58,59],n:\"O-O-O\"},\n\t\t\t\t\"62/57\": {k:[61,60,59,58],r:[58,59],n:\"O-O-O\"},\n\t\t\t\t\"59/58\": {k:[58],r:[59],n:\"O-O-O\"},\n\t\t\t\t\"60/58\": {k:[59,58],r:[59],n:\"O-O-O\"},\n\t\t\t\t\"61/58\": {k:[60,59,58],r:[59],n:\"O-O-O\"},\n\t\t\t\t\"62/58\": {k:[61,60,59,58],r:[59],n:\"O-O-O\"},\n\t\t\t\t\"60/59\": {k:[59,58],r:[59],n:\"O-O-O\"},\n\t\t\t\t\"61/59\": {k:[60,59,58],r:[59],n:\"O-O-O\"},\n\t\t\t\t\"62/59\": {k:[61,60,59,58],r:[59],n:\"O-O-O\"},\n\t\t\t\t\"61/60\": {k:[60,59,58],r:[59],n:\"O-O-O\"},\n\t\t\t\t\"62/60\": {k:[61,60,59,58],r:[59],n:\"O-O-O\"},\n\t\t\t\t\"62/61\": {k:[61,60,59,58],r:[60,59],n:\"O-O-O\"},\n\n\t\t\t\t\"57/63\": {k:[58,59,60,61,62],r:[62,61],n:\"O-O\"},\n\t\t\t\t\"58/63\": {k:[59,60,61,62],r:[62,61],n:\"O-O\"},\n\t\t\t\t\"59/63\": {k:[60,61,62],r:[62,61],n:\"O-O\"},\n\t\t\t\t\"60/63\": {k:[61,62],r:[62,61],n:\"O-O\"},\n\t\t\t\t\"61/63\": {k:[62],r:[62,61],n:\"O-O\"},\n\t\t\t\t\"62/63\": {k:[62],r:[62,61],n:\"O-O\"},\n\t\t\t\t\"57/62\": {k:[58,59,60,61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"58/62\": {k:[59,60,61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"59/62\": {k:[60,61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"60/62\": {k:[61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"61/62\": {k:[62],r:[61],n:\"O-O\"},\n\t\t\t\t\"57/61\": {k:[58,59,60,61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"58/61\": {k:[59,60,61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"59/61\": {k:[60,61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"60/61\": {k:[61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"57/60\": {k:[58,59,60,61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"58/60\": {k:[59,60,61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"59/60\": {k:[60,61,62],r:[61],n:\"O-O\"},\n\t\t\t\t\"57/59\": {k:[58,59,60,61,62],r:[60,61],n:\"O-O\"},\n\t\t\t\t\"58/59\": {k:[59,60,61,62],r:[60,61],n:\"O-O\"},\n\t\t\t\t\"57/58\": {k:[58,59,60,61,62],r:[59,60,61],n:\"O-O\"},\n\n\t\t\t},\n\t\t\t\n\t\t\tevaluate: function(aGame,evalValues,material) {\n\t\t\t\t// check lack of material to checkmate\n\t\t\t\tvar white=material[1].count;\n\t\t\t\tvar black=material[-1].count;\n\t\t\t\tif(!white[0] && !white[1] && !white[4] && !white[5] && !white[6] && !white[7]) { // white king single\n\t\t\t\t\tif(!black[2] && !black[3] && !black[6] && !black[7] && (black[4]+black[5]<2 || black[5]<2)) {\n\t\t\t\t\t\tthis.mFinished=true;\n\t\t\t\t\t\tthis.mWinner=JocGame.DRAW;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!black[2] && !black[3] && !black[4] && !black[5] && !black[6] && !black[7]) { // black king single\n\t\t\t\t\tif(!white[0] && !white[1] && !white[6] && !white[7] && (white[4]+white[5]<2 || white[5]<2)) {\n\t\t\t\t\t\tthis.mFinished=true;\n\t\t\t\t\t\tthis.mWinner=JocGame.DRAW;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// check 50 moves without capture\n\t\t\t\tif(this.noCaptCount>=100) {\n\t\t\t\t\tthis.mFinished=true;\n\t\t\t\t\tthis.mWinner=JocGame.DRAW;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// motivate pawns to reach the promotion line\n\t\t\t\tvar distPromo=aGame.cbUseTypedArrays?new Int8Array(3):[0,0,0];\n\t\t\t\tvar height=geometry.height;\n\t\t\t\tvar pawns=material[1].byType[0],pawnsLength;\n\t\t\t\tif(pawns) {\n\t\t\t\t\tpawnsLength=pawns.length;\n\t\t\t\t\tfor(var i=0;i<pawnsLength;i++)\n\t\t\t\t\t\tswitch(height-geometry.R(pawns[i].p)) {\n\t\t\t\t\t\tcase 2: distPromo[0]++; break;\n\t\t\t\t\t\tcase 3: distPromo[1]++; break;\n\t\t\t\t\t\tcase 4: distPromo[2]++; break;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpawns=material[-1].byType[2],pawnsLength;\n\t\t\t\tif(pawns) {\n\t\t\t\t\tpawnsLength=pawns.length;\n\t\t\t\t\tfor(var i=0;i<pawnsLength;i++)\n\t\t\t\t\t\tswitch(geometry.R(pawns[i].p)) {\n\t\t\t\t\t\tcase 1: distPromo[0]--; break;\n\t\t\t\t\t\tcase 2: distPromo[1]--; break;\n\t\t\t\t\t\tcase 3: distPromo[2]--; break;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(distPromo[0]!=0)\n\t\t\t\t\tevalValues['distPawnPromo1']=distPromo[0];\n\t\t\t\tif(distPromo[1]!=0)\n\t\t\t\t\tevalValues['distPawnPromo2']=distPromo[1];\n\t\t\t\tif(distPromo[2]!=0)\n\t\t\t\t\tevalValues['distPawnPromo3']=distPromo[2];\n\t\t\t\t\n\t\t\t\t// motivate knights and bishops to deploy early\n\t\t\t\tvar minorPiecesMoved=0;\n\t\t\t\tfor(var t=4;t<=5;t++)\n\t\t\t\t\tfor(var s=1;s>=-1;s-=2) {\n\t\t\t\t\t\tvar pieces=material[s].byType[t];\n\t\t\t\t\t\tif(pieces)\n\t\t\t\t\t\t\tfor(var i=0;i<pieces.length;i++)\n\t\t\t\t\t\t\t\tif(pieces[i].m)\n\t\t\t\t\t\t\t\t\tminorPiecesMoved+=s;\n\t\t\t\t\t}\n\t\t\t\tif(minorPiecesMoved!=0) {\n\t\t\t\t\tevalValues['minorPiecesMoved']=minorPiecesMoved;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t};\n\t}\n\t\n\tvar SuperModelBoardGenerateMoves=Model.Board.GenerateMoves;\n\tModel.Board.GenerateMoves = function(aGame) {\n\t\tif(this.setupState===undefined)  {\n\t\t\tthis.mMoves=[{}];\n\t\t\treturn;\n\t\t}\n\t\tif(this.setupState==\"setup\")  {\n\t\t\tthis.mMoves=[];\n\t\t\tfor(var i=0;i<960;i++)\n\t\t\t\tthis.mMoves.push({setup:i});\n\t\t\treturn;\n\t\t}\n\t\tSuperModelBoardGenerateMoves.apply(this,arguments); // call regular GenerateMoves method\n\t}\n\t\n\tvar SuperModelBoardCopyFrom = Model.Board.CopyFrom;\n\tModel.Board.CopyFrom = function(aBoard) {\n\t\tSuperModelBoardCopyFrom.apply(this,arguments);\n\t\tthis.setupState = aBoard.setupState;\n\t}\n\n\tvar SuperModelBoardEvaluate = Model.Board.Evaluate;\n\tModel.Board.Evaluate = function(aGame) {\n\t\tif(this.setupState===undefined || this.setupState==\"setup\")\n\t\t\treturn;\n\t\tSuperModelBoardEvaluate.apply(this,arguments);\n\t}\n\n\tvar SuperModelBoardApplyMove=Model.Board.ApplyMove;\n\tModel.Board.ApplyMove = function(aGame,move) {\n\t\tif(this.setupState===undefined)\n\t\t\tthis.setupState=\"setup\";\n\t\telse if(this.setupState==\"setup\") {\n\t\t\tvar $this=this;\n\t\t\tvar pieces={ \"1\": {}, \"-1\": {} };\n\t\t\tthis.pieces.forEach(function(piece,pIndex) {\n\t\t\t\tif(piece.t>=4) {\n\t\t\t\t\t$this.zSign=aGame.zobrist.update($this.zSign,\"board\",pIndex,piece.p);\t\t\t\t\n\t\t\t\t\t$this.board[piece.p]=-1;\n\t\t\t\t\tpiece.p=-1;\n\t\t\t\t\tvar pType=aGame.g.pTypes[piece.t];\n\t\t\t\t\tif(pieces[piece.s][pType.abbrev]===undefined)\n\t\t\t\t\t\tpieces[piece.s][pType.abbrev]=[];\n\t\t\t\t\tpieces[piece.s][pType.abbrev].push(piece.i);\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar cols=aGame.c960Gen(move.setup);\n\t\t\t//console.info(\"cols\",cols);\n\t\t\t//console.info(\"pieces\",pieces);\n\t\t\tcols.forEach(function(type,colIndex) {\n\t\t\t\t[\"1\",\"-1\"].forEach(function(side) {\n\t\t\t\t\tvar index=pieces[side][type].shift();\n\t\t\t\t\tvar piece=$this.pieces[index];\n\t\t\t\t\tvar pos=colIndex+(side==\"-1\"?56:0);\n\t\t\t\t\t//console.log(\"index\",index,\"to pos\",pos)\n\t\t\t\t\t$this.board[pos]=index;\n\t\t\t\t\tpiece.p=pos;\n\t\t\t\t\t$this.zSign=aGame.zobrist.update($this.zSign,\"board\",index,pos);\t\n\t\t\t\t\tif(type==\"K\")\n\t\t\t\t\t\t$this.kings[piece.s]=pos;\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.setupState=\"done\";\n\t\t} else\n\t\t\tSuperModelBoardApplyMove.apply(this,arguments);\n\t}\n\n\tvar SuperModelMoveToString = Model.Move.ToString;\n\tModel.Move.ToString = function() {\n\t\tif(this.f===undefined) {\n\t\t\tif(this.setup===undefined)\n\t\t\t\treturn \"--\";\n\t\t\telse\n\t\t\t\treturn \"#\"+this.setup;\n\t\t}\n\t\treturn SuperModelMoveToString.apply(this,arguments);\n\t}\n\t\n\tvar SuperModelBoardCompactMoveString = Model.Board.CompactMoveString; \n\tModel.Board.CompactMoveString = function(aGame,aMove,allMoves) {\n\t\tif(typeof aMove.ToString!=\"function\") // ensure proper move object, if necessary\n\t\t\taMove=aGame.CreateMove(aMove);\n\t\tif(this.setupState===undefined || this.setupState==\"setup\")\n\t\t\treturn aMove.ToString();\n\t\treturn SuperModelBoardCompactMoveString.apply(this,arguments);\n\t}\n\n\tModel.Board.StaticGenerateMoves = function(aGame) {\n\t\tif(this.setupState==\"setup\")\n\t\t\treturn [aGame.CreateMove({setup:Math.floor(Math.random()*960)})];\n\t\treturn null;\n\t}\n\n\t\n\tModel.Game.c960Gen = function(seed) {\n\t    var cols = [], empty = [0, 1, 2, 3, 4, 5, 6, 7], fullSeed = 960,\n\t        b1, b2, nn;\n\t\n\t    if (seed === undefined) {\n\t        seed = Math.floor(Math.random() * 960);\n\t    } else {\n\t        seed %= 960;\n\t    }\n\t\n\t    function rand(range) {\n\t        fullSeed /= range;\n\t        var value = Math.floor(seed / fullSeed);\n\t        seed %= fullSeed;\n\t        return value;\n\t    }\n\t    function assign(piece, col) {\n\t        cols[col] = piece;\n\t        empty.splice(empty.indexOf(col), 1);\n\t    }\n\t    b1 = rand(4) * 2;\n\t    b2 = rand(4) * 2 + 1;\n\t    assign('B', b1);\n\t    assign('B', b2);\n\t    assign('Q', empty[rand(6)]);\n\t    nn = [ [0, 1], [0, 2], [0, 3], [0, 4], [1, 2],\n\t        [1, 3], [1, 4], [2, 3], [2, 4], [3, 4]][rand(10)];\n\t    assign('N', empty[nn[1]]);\n\t    assign('N', empty[nn[0]]);\n\t    assign('R', empty[0]);\n\t    assign('K', empty[0]);\n\t    assign('R', empty[0]);\n\t    return cols;\n\t}\n\t\n})();"],"file":"chess960-model.js"}