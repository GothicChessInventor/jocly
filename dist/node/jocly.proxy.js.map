{"version":3,"sources":["jocly.proxy.js"],"names":["joclyGame","require","joclyCore","gameConfigs","GameProxyClass","gameName","listeners","prototype","listen","listener","self","promise","Promise","resolve","reject","push","unlisten","i","length","splice","humanTurn","game","machineTurn","options","StartMachine","getFinished","finished","GetFinished","getMoveString","move","m","GetMoveClass","ToString","Post","message","forEach","call","GetListener","_game","type","ApplyMove","InvertWho","Object","assign","winner","result","moveData","CreateGame","config","createInternalGame","then","AddListener","listGames","games","gameDescr","Error","module","exports","createGame"],"mappings":"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","file":"jocly.proxy.js","sourcesContent":["/*    Copyright 2017 Jocly\n *\n *    This program is free software: you can redistribute it and/or  modify\n *    it under the terms of the GNU Affero General Public License, version 3,\n *    as published by the Free Software Foundation.\n *\n *    This program is distributed in the hope that it will be useful,\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *    GNU Affero General Public License for more details.\n *\n *    You should have received a copy of the GNU Affero General Public License\n *    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n *    As a special exception, the copyright holders give permission to link the\n *    code of portions of this program with the OpenSSL library under certain\n *    conditions as described in each individual source file and distribute\n *    linked combinations including the program with the OpenSSL library. You\n *    must comply with the GNU Affero General Public License in all respects\n *    for all of the code used other than as permitted herein. If you modify\n *    file(s) with this exception, you may extend this exception to your\n *    version of the file(s), but you are not obligated to do so. If you do not\n *    wish to do so, delete this exception statement from your version. If you\n *    delete this exception statement from all source files in the program,\n *    then also delete it in the license file.\n */\n\nvar joclyGame = require(\"./jocly.game\");\nvar joclyCore = require(\"./jocly.core\");\n\nvar gameConfigs = {}\n\nfunction GameProxyClass(gameName) {\n    this.gameName = gameName;\n    this.listeners = [];\n}\n\nGameProxyClass.prototype.listen = function(listener) {\n    var self = this;\n    var promise = new Promise((resolve,reject)=>{\n        self.listeners.push(listener);\n        resolve();\n    });\n    return promise;\n}\n\nGameProxyClass.prototype.unlisten = function(listener) {\n    var self = this;\n    var promise = new Promise((resolve,reject)=>{\n        for(var i = self.listeners.length-1;i>=0;i--)\n            if(self.listeners[i]==listener)\n                self.listeners.splice(i,1);\n        resolve();\n    });\n    return promise;\n}\n\nGameProxyClass.prototype.humanTurn = function() {\n    return this.game.humanTurn();\n}\n\nGameProxyClass.prototype.machineTurn = function(options) {\n    var self = this;\n    var promise = new Promise((resolve,reject)=>{\n        self.game.StartMachine(options);\n        resolve();\n    });\n    return promise;\n}\n\nGameProxyClass.prototype.getFinished = function() {\n    var self = this;\n    var promise = new Promise((resolve,reject)=>{\n        var finished = self.gameName.GetFinished();\n        resolve(finished);\n    });\n    return promise;\n}\n\nGameProxyClass.prototype.getMoveString = function(move) {\n    var self = this;\n    var promise = new Promise((resolve,reject)=>{\n        var m = new (self.game.GetMoveClass())(move);\n        resolve(m.ToString());\n    });\n    return promise;\n}\n\nfunction Post(game,message) {\n    game.listeners.forEach((listener)=>{\n        listener.call(game,message);\n    });\n}\n\n\nfunction GetListener(game) {\n    return function(message) {\n        var _game = this;\n        switch(message.type) {\n            case \"human-move\":\n                _game.ApplyMove(message.move);\n                var finished = _game.GetFinished();\n                if(!finished)\n                    _game.InvertWho();\n                Object.assign(message,{\n                    finished: !!finished,\n                    winner: finished\n                });\n                break;\n            case \"machine-move\":\n                var move = message.result.move;\n                delete message.result.move;\n                _game.ApplyMove(move);\n                var finished = _game.GetFinished();\n                if(!finished)\n                    _game.InvertWho();\n                Post(game,{\n                    type: \"machine-move\",\n                    moveData: message.result,\n                    move: move,\n                    finished: !!finished,\n                    winner: finished\n                });\n                return;\n        }\n        Post(game,message);\n    }\n}\n\nfunction CreateGame(gameName) {\n    var promise = new Promise((resolve,reject)=>{\n\n        function CreateGame(config) {\n            var game = new GameProxyClass(gameName);\n            Object.assign(game,config);\n            game.game = new joclyCore.createInternalGame(gameName)\n                .then((_game)=>{\n                    _game.AddListener(GetListener(game));\n                    game.game = _game;\n                    resolve(game);\n                },reject);\n        }\n\n        var config = gameConfigs[gameName];\n        if(config)\n            CreateGame(config);\n        else {\n            joclyCore.listGames()\n                .then((games)=>{\n                    var gameDescr = games[gameName];\n                    if (!gameDescr)\n                        return reject(new Error(\"Game \" + gameName + \" not found\"));\n                    var config = require(\"./games/\" + gameDescr.module + \"/\" + gameName + \"-config.js\")\n                    gameConfigs[gameName] = config;\n                    CreateGame(config);\n                },reject);\n        }\n    });\n    return promise;\n}\n\nexports.createGame = CreateGame;\n"]}