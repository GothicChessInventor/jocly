{"version":3,"sources":["jocly.uct.js"],"names":["JoclyUCT","process","title","module","exports","r","require","ju","global","MersenneTwister","JocUtil","Node","parent","who","visits","children","parents","push","known","evaluation","staticEvalSum","staticEvalCount","depth","prototype","addParent","winnerMap","startMachine","aGame","aOptions","loopCount","nodeCount","redundantNodeCount","poDur","poCount","skippedAlphaBeta","maxDepth","uctParams","minVisitsExpand","level","playoutSpread","playoutDepth","undefined","c","playoutCeil","log","maxDuration","maxLoops","maxNodes","showMinimaxTree","showBestLine","ignoreLeaf","propagateMultiVisits","propagation","useDepthWeights","productRatio","useAlphaBeta","uncertaintyFactor","directVisits","distributeEval","pickMove","debugRawEval","uctNodes","signatures","console","label","mWho","evalMapPositive","v","l","m","Number","MAX_VALUE","evalMapNegative","JSON","parse","stringify","NormalizeEval","evalNode","negative","normEval","step","GetMinimaxEval","node","i","length","node1","GetMaximinEval","GetProductEval","value","value1","PropagateEvalParent","visited","mOptions","uctTransposition","uctIgnoreLoop","sign","hasExpandedChildren","n","evaluation1","evaluation2","Math","max","min","GetPropabilityProductEval","WeightEval","pow","PropagateEval","PropagateVisits","sort","c1","c2","PropagateKnownParent","PropagateKnown","TransformInteger","v0","ib","b","Step","board","GetBoardClass","CopyFrom","mBoard","pathSign","rootNode","descendMaxDepth","moves","nodePath","parentVisits","alpha","beta","PickBestChildren","candidateChildren","child1","ucb","sqrt","parentVisitsLog","f","bestChildren","bestUCB","PickBestChildrenDistributeEval","childrenDE","values","v1","v2","index","vi","value0","candidateChildren0","child","floor","random","ApplyMove","AddVisit","mMoves","GetSignature","GenerateMoves","mFinished","mWinner","bestEval","move","signatures1","board1","signature","sign1","Evaluate","isNaN","mEvaluation","error","Playout","nodeChain","GetMoveClass","Strip","_eval","j","RemoveVisit","result","t0","Date","now","finished","winner","weightedMoves","a1","a2","ev1","ev2","rnd","equalMoves","lastEval","cursor","reached","wMove","ev","pickedMove","eval","nodeEval","rawEval","UpdateDepthEval","evalWeights","count","sum","weight","average","mBestMoves","schedule","lastProgressPercent","Run","mAborted","mAbortCallback","call","progressPercent","round","mProgressCallback","e","setTimeout","ReportStats","bestEval2","forEach","staticEval","ShowMinimax","warn","indent","ToString","checkSide","CheckSide","checkSideNodeCount","checkSideError"],"mappings":"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","file":"jocly.uct.js","sourcesContent":["/*    Copyright 2017 Jocly\n *\n *    This program is free software: you can redistribute it and/or  modify\n *    it under the terms of the GNU Affero General Public License, version 3,\n *    as published by the Free Software Foundation.\n *\n *    This program is distributed in the hope that it will be useful,\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *    GNU Affero General Public License for more details.\n *\n *    You should have received a copy of the GNU Affero General Public License\n *    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n *    As a special exception, the copyright holders give permission to link the\n *    code of portions of this program with the OpenSSL library under certain\n *    conditions as described in each individual source file and distribute\n *    linked combinations including the program with the OpenSSL library. You\n *    must comply with the GNU Affero General Public License in all respects\n *    for all of the code used other than as permitted herein. If you modify\n *    file(s) with this exception, you may extend this exception to your\n *    version of the file(s), but you are not obligated to do so. If you do not\n *    wish to do so, delete this exception statement from your version. If you\n *    delete this exception statement from all source files in the program,\n *    then also delete it in the license file.\n */\n\nvar JoclyUCT={};\n\nif(typeof process!==\"undefined\" && process.title === \"node\") {\n\tmodule.exports.JoclyUCT = JoclyUCT;\n\t(function() {\n\t\tvar r = require;\n\t\tvar ju = r(\"./jocly.util.js\");\n\t\tglobal.MersenneTwister = ju.MersenneTwister;\n\t\tglobal.JocUtil = ju.JocUtil;\n\t})();\n} else\n\tthis.JoclyUCT = JoclyUCT;\n\n(function() {\n\t\n\tfunction Node(parent,who) {\n\t\tthis.visits=1;\t\t\t\t\t\t\t// number of time the node has been visited\n\t\tthis.children=null;\t\t\t\t\t// node children if any\n\t\tthis.who=who;\t\t\t\t\t\t\t// 1 = first player, 2 = second player\n\t\tthis.parents=[];\t\t\t\t\t\t// parent nodes\n\t\tif(parent)\n\t\t\tthis.parents.push(parent);\n\t\tthis.known=false;\t\t\t\t\t\t// true if all the node and nodes below have been expanded and all leaves are terminal \n\t\tthis.evaluation=0;\t\t\t\t\t\t// the current minimax value\n\t\tthis.staticEvalSum=0;\t\t\t\t\t// the sum of the normalized playouts evaluations\n\t\tthis.staticEvalCount=0;\t\t\t\t// the number of playouts evaluations\n\t\tthis.depth=parent?parent.depth+1:0;\t\t// the node depth\n\t}\n\t\n\tNode.prototype={\n\t\taddParent: function(parent) {\n\t\t\tthis.parents.push(parent);\n\t\t\tif(parent.depth+1<this.depth)\n\t\t\t\tthis.depth=parent.depth+1;\n\t\t}\n\t}\n\t\n\tvar winnerMap={ // convert from Jocly convention (draw==2)\n\t\t\"-1\": -1,\n\t\t1: 1,\n\t\t2: 0,\n\t\t0: 0\n\t}\n\t\t\n\tJoclyUCT.startMachine = function(aGame,aOptions) {\n\t\tvar loopCount=0;\n\t\tvar nodeCount=0;\n\t\tvar redundantNodeCount=0;\n\t\tvar poDur=0,poCount=0;\t// playout stats\n\t\tvar skippedAlphaBeta=0; // alpha-beta stats\n\t\tvar maxDepth=0;\n\n\t\tvar uctParams={\n\t\t\t\tminVisitsExpand: aOptions.level.minVisitsExpand || 1,\n\t\t\t\tplayoutSpread: aOptions.level.playoutSpread || 2,\n\t\t\t\tplayoutDepth: (aOptions.level.playoutDepth!==undefined)?aOptions.level.playoutDepth:0,\n\t\t\t\tc: (aOptions.level.c!==undefined)?aOptions.level.c:.3,\n\t\t\t\tplayoutCeil: (aOptions.level.playoutCeil!==undefined)?aOptions.level.playoutCeil:0,\n\t\t\t\tlog: aOptions.level.log?true:false,\n\t\t\t\tmaxDuration: (aOptions.level.maxDuration!==undefined)?aOptions.level.maxDuration:2,\n\t\t\t\tmaxLoops: (aOptions.level.maxLoops!==undefined)?aOptions.level.maxLoops:0,\n\t\t\t\tmaxNodes: (aOptions.level.maxNodes!==undefined)?aOptions.level.maxNodes:0,\n\t\t\t\tshowMinimaxTree: aOptions.level.showMinimaxTree?true:false,\n\t\t\t\tshowBestLine: aOptions.level.showBestLine?true:false,\n\t\t\t\tignoreLeaf: aOptions.level.ignoreLeaf===undefined?false:aOptions.level.ignoreLeaf,\n\t\t\t\tpropagateMultiVisits: aOptions.level.propagateMultiVisits===undefined?true:aOptions.level.propagateMultiVisits,\n\t\t\t\tpropagation: aOptions.level.propagation===undefined?\"mixed\":aOptions.level.propagation,\n\t\t\t\tuseDepthWeights: aOptions.level.useDepthWeights===undefined?false:aOptions.level.useDepthWeights,\n\t\t\t\tproductRatio: aOptions.level.productRatio===undefined?0:aOptions.level.productRatio,\n\t\t\t\tuseAlphaBeta: aOptions.level.useAlphaBeta===undefined?false:aOptions.level.useAlphaBeta,\n\t\t\t\tuncertaintyFactor: aOptions.level.uncertaintyFactor===undefined?0:aOptions.level.uncertaintyFactor,\n\t\t\t\tdirectVisits: aOptions.level.directVisits===undefined?true:aOptions.level.directVisits,\n\t\t\t\tdistributeEval: aOptions.level.distributeEval===undefined?true:aOptions.level.distributeEval,\n\t\t\t\tpickMove: aOptions.level.pickMove===undefined?\"besteval\":aOptions.level.pickMove, // or maxvisits\n\t\t\t\tdebugRawEval: aOptions.level.debugRawEval===undefined?false:aOptions.level.debugRawEval,\n\t\t};\n\t\tvar uctNodes={};\n\t\tvar signatures; // the array of visited board signatures\n\n\t\tif(uctParams.log)\n\t\t\tconsole.log(\"Running UCT AI - \",aOptions.level.label,\"- Player\",aGame.mWho==1?\"A\":\"B\");\n\n\t\t/*\n\t\t * Normalize evaluations to get -1<eval<1\n\t\t * Handle negative and positive evaluations separately so 0 remains 0 \n\t\t */\n\t\tvar evalMapPositive={\n\t\t\tv: 0,\t\t\t\t\t\t// evaluation original value\n\t\t\tl: null,\t\t\t\t\t// \"less\" branch (for evaluations < v)\n\t\t\tm: {\t\t\t\t\t\t// \"more\" branch (for evaluations > v)\n\t\t\t\tv: Number.MAX_VALUE,\n\t\t\t\tl: null,\n\t\t\t\tm: null,\n\t\t\t},\n\t\t}\n\t\tvar evalMapNegative=JSON.parse(JSON.stringify(evalMapPositive)); // deep copy for the initial negative map\n\t\t\n\t\tfunction NormalizeEval(evaluation) {\n\t\t\tvar evalNode=evalMapPositive;\n\t\t\tvar negative=false;\n\t\t\tvar normEval=0, step=1;\n\t\t\tif(evaluation==0)\n\t\t\t\treturn 0;\n\t\t\tif(evaluation<0) {\n\t\t\t\tevaluation=-evaluation;\n\t\t\t\tevalNode=evalMapNegative;\n\t\t\t\tnegative=true;\n\t\t\t}\n\t\t\twhile(true) {\n\t\t\t\tif(evaluation>evalNode.v) {\n\t\t\t\t\tnormEval+=step;\n\t\t\t\t\tif(!evalNode.m) {\n\t\t\t\t\t\tevalNode.m={\n\t\t\t\t\t\t\tv: evaluation,\n\t\t\t\t\t\t\tl: null,\n\t\t\t\t\t\t\tm: null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tevalNode=evalNode.m;\n\t\t\t\t} else if(evaluation<evalNode.v) {\n\t\t\t\t\tnormEval-=step;\n\t\t\t\t\tif(!evalNode.l) {\n\t\t\t\t\t\tevalNode.l={\n\t\t\t\t\t\t\tv: evaluation,\n\t\t\t\t\t\t\tl: null,\n\t\t\t\t\t\t\tm: null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tevalNode=evalNode.l;\n\t\t\t\t} else {\t// matching evaluation\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstep=step/2;\n\t\t\t}\n\t\t\tif(negative)\n\t\t\t\tnormEval=-normEval;\n\t\t\treturn normEval;\n\t\t}\n\t\t\n\t\t/*\n\t\t * Best evaluation (minimax)\n\t\t */\n\t\tfunction GetMinimaxEval(node,children) {\n\t\t\tvar evaluation=undefined;\n\t\t\tfor(var i=0;i<children.length;i++) {\n\t\t\t\tvar node1=children[i];\n\t\t\t\tif(evaluation===undefined || node1.evaluation*node1.who>evaluation*node1.who)\n\t\t\t\t\tevaluation=node1.evaluation;\n\t\t\t}\n\t\t\treturn evaluation;\n\t\t}\n\t\t/*\n\t\t * Minus worse opponent evaluation\n\t\t */\n\t\tfunction GetMaximinEval(node,children) {\n\t\t\tvar evaluation=undefined;\n\t\t\tfor(var i=0;i<children.length;i++) {\n\t\t\t\tvar node1=children[i];\n\t\t\t\tif(evaluation===undefined || node1.evaluation*node1.who<evaluation*node1.who)\n\t\t\t\t\tevaluation=node1.evaluation;\n\t\t\t}\n\t\t\treturn -evaluation;\n\t\t}\n\t\t/*\n\t\t * Probability product evaluation\n\t\t */\n\t\tfunction GetProductEval(node,children) {\n\t\t\tvar value=1;\n\t\t\tfor(var i=0;i<children.length;i++) {\n\t\t\t\tvar node1=children[i];\n\t\t\t\tvalue1=(node1.evaluation+1)/2;\n\t\t\t\tif(node.who==1)\n\t\t\t\t\tvalue*=1-node1.evaluation;\n\t\t\t\telse\n\t\t\t\t\tvalue*=node1.evaluation;\n\t\t\t}\n\t\t\tif(node.who==1)\n\t\t\t\treturn (1-value)*2-1;\n\t\t\telse\n\t\t\t\treturn value*2-1;\n\t\t}\n\t\t\n\t\tfunction PropagateEvalParent(node,visits,visited) {\n\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop && (node.sign in visited))\n\t\t\t\treturn;\n\t\t\tvar children=[];\n\t\t\tif(uctParams.ignoreLeaf) {\n\t\t\t\tvar hasExpandedChildren=false;\n\t\t\t\tfor(var i=0;i<node.children.length;i++)\n\t\t\t\t\tif(node.children[i].n.children) {\n\t\t\t\t\t\thasExpandedChildren=true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif(hasExpandedChildren) {\n\t\t\t\t\tfor(var i=0;i<node.children.length;i++) {\n\t\t\t\t\t\tvar node1=node.children[i].n;\n\t\t\t\t\t\tif(node1.known || node1.children)\n\t\t\t\t\t\t\tchildren.push(node1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(children.length==0)\n\t\t\t\tfor(var i=0;i<node.children.length;i++)\n\t\t\t\t\tchildren.push(node.children[i].n);\n\n\t\t\tvar evaluation;\n\t\t\tswitch(uctParams.propagation) {\n\t\t\tcase \"maximin\":\n\t\t\t\tevaluation=GetMaximinEval(node,children);\n\t\t\t\tbreak;\n\t\t\tcase \"minimax2min-avg\":\n\t\t\t\tvar evaluation1=GetMaximinEval(node,children);\n\t\t\t\tvar evaluation2=GetMinimaxEval(node,children);\n\t\t\t\tevaluation=(evaluation1+evaluation2)/2;\n\t\t\t\tbreak;\n\t\t\tcase \"minimax2min-best\":\n\t\t\t\tvar evaluation1=GetMaximinEval(node,children);\n\t\t\t\tvar evaluation2=GetMinimaxEval(node,children);\n\t\t\t\tif(node.who==1)\n\t\t\t\t\tevaluation=Math.max(evaluation1,evaluation2);\n\t\t\t\telse\n\t\t\t\t\tevaluation=Math.min(evaluation1,evaluation2);\n\t\t\t\tbreak;\n\t\t\tcase \"product\":\n\t\t\t\tevaluation=GetPropabilityProductEval(node,children);\n\t\t\t\tbreak;\n\t\t\tcase \"minimax\":\n\t\t\tcase \"mixed\":\n\t\t\tdefault:\n\t\t\t\tevaluation=GetMinimaxEval(node,children);\n\t\t\t\tif(uctParams.propagation==\"mixed\" && uctParams.productRatio>0) {\n\t\t\t\t\tevaluation2=GetProductEval(node,children);\n\t\t\t\t\tevaluation=uctParams.productRatio*evaluation2+(1-uctParams.productRatio)*evaluation;\n\t\t\t\t}\n\t\t\t\tif(uctParams.useDepthWeights)\n\t\t\t\t\tevaluation=WeightEval(evaluation,node.depth+1);\n\t\t\t}\n\t\t\tif(uctParams.uncertaintyFactor) // tend to do good things now rather than later\n\t\t\t\tevaluation*=1-Math.pow(10,-uctParams.uncertaintyFactor)*Math.log(node.depth+1);\n\t\t\tif(node.evaluation!==evaluation) { \n\t\t\t\tnode.evaluation=evaluation;\n\t\t\t\tif(!uctParams.directVisits)\n\t\t\t\t\tnode.visits+=visits;\n\t\t\t\tPropagateEval(node,visits,visited);\n\t\t\t} else if(!uctParams.directVisits)\n\t\t\t\tPropagateVisits(node,visits,visited);\n\t\t}\n\t\tfunction PropagateEval(node,visits,visited) {\n\t\t\tif(node.parents.length==0) // root node: stop here\n\t\t\t\treturn;\n\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop) {\n\t\t\t\tif(!visited)\n\t\t\t\t\tvisited={};\n\t\t\t\tvisited[node.sign]=true;\n\t\t\t}\n\t\t\tfor(var i=0;i<node.parents.length;i++) {\n\t\t\t\tvar parent=node.parents[i];\n\t\t\t\tif(uctParams.useAlphaBeta) { // sort the parent children so alpha-beta will be more efficient\n\t\t\t\t\tparent.children.sort(function(c1,c2) {\n\t\t\t\t\t\treturn (c2.evaluation-c1.evaluation)*node.who;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tPropagateEvalParent(parent,visits,visited);\n\t\t\t}\n\t\t}\n\n\t\tfunction PropagateVisits(node,visits,visited) {\n\t\t\tif(node.parents.length==0) // root node: stop here\n\t\t\t\treturn;\n\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop) {\n\t\t\t\tif(!visited)\n\t\t\t\t\tvisited={};\n\t\t\t\tvisited[node.sign]=true;\n\t\t\t}\n\t\t\tfor(var i=0;i<node.parents.length;i++) {\n\t\t\t\tvar parent=node.parents[i];\n\t\t\t\tif(!(parent.sign in visited)) {\n\t\t\t\t\tparent.visits+=visits;\n\t\t\t\t\tvisited[parent.sign]=true;\n\t\t\t\t\tPropagateVisits(parent,visits,visited);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/*\n\t\t * Propagates known boolean up \n\t\t */\n\t\tfunction PropagateKnownParent(node,visited) {\n\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop && (node.sign in visited))\n\t\t\t\treturn;\n\t\t\tvar known=true;\n\t\t\tfor(var i=0;i<node.children.length;i++) {\n\t\t\t\tvar node1=node.children[i].n;\n\t\t\t\tif(node1.known==false) {\n\t\t\t\t\tknown=false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(known==true) {\n\t\t\t\tnode.known=true;\n\t\t\t\tPropagateKnown(node,visited);\n\t\t\t}\n\t\t}\n\t\tfunction PropagateKnown(node,visited) {\n\t\t\tif(node.known==false || node.parents.length==0)\n\t\t\t\treturn;\n\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop) {\n\t\t\t\tif(!visited)\n\t\t\t\t\tvisited={};\n\t\t\t\tvisited[node.sign]=true;\n\t\t\t}\n\t\t\tfor(var i=0;i<node.parents.length;i++)\n\t\t\t\tPropagateKnownParent(node.parents[i],visited);\n\t\t}\n\n\t\t/*\n\t\t * A simple 32 bits integer transformation function, so that zobrist board signatures can be XORed without side effect\n\t\t */\n\t\tfunction TransformInteger(v0) {\n\t\t\tvar ib=1;\n\t\t\tvar v=0;\n\t\t\tfor(var i=0;i<32;i++) {\n\t\t\t\tvar b=(v0>>>i)&1;\n\t\t\t\tif(ib)\n\t\t\t\t\tv=(v<<1)|b;\n\t\t\t\telse\n\t\t\t\t\tv=(v<<1)|(1-b);\n\t\t\t\tib=b;\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\t\t\n\t\t/*\n\t\t * Runs an iteration\n\t\t */\n\t\tfunction Step() {\n\t\t\tloopCount++;\n\n\t\t\t// Select\n\t\t\tvar board=new (aGame.GetBoardClass())(aGame);\n\t\t\tboard.CopyFrom(aGame.mBoard);\n\t\t\t\n\t\t\tvar pathSign=0; // keep track of the boards we've been through (order doesn't matter)\n\t\t\tvar node=rootNode;\n\t\t\tvar depth=0;\n\t\t\tvar descendMaxDepth=0;\n\t\t\tvar moves=[];\n\t\t\tvar nodePath=[];\n\t\t\tvar parentVisits=loopCount;\n\t\t\tvar visited={};\n\t\t\tvar alpha=-2;\n\t\t\tvar beta=2;\n\t\t\twhile(true) {\n\t\t\t\tnodePath.push(node);\n\t\t\t\tif(depth>descendMaxDepth) {\n\t\t\t\t\tdescendMaxDepth=depth;\n\t\t\t\t}\n\t\t\t\tif(node.children===null)\n\t\t\t\t\tbreak;\n\t\t\t\tvar candidateChildren;\n\t\t\t\tif(uctParams.useAlphaBeta) {\n\t\t\t\t\tcandidateChildren=[];\n\t\t\t\t\tfor(var i=0;i<node.children.length;i++) {\n\t\t\t\t\t\tvar child1=node.children[i];\n\t\t\t\t\t\tvar node1=child1.n;\n\t\t\t\t\t\tcandidateChildren.push(child1);\n\t\t\t\t\t\tif(node1.who==1 && // maximizing player \n\t\t\t\t\t\t\tnode1.evaluation>alpha)\n\t\t\t\t\t\t\talpha=node1.evaluation;\n\t\t\t\t\t\tif(node1.who==-1 && // minimizing player\n\t\t\t\t\t\t\tnode1.evaluation<beta)\n\t\t\t\t\t\t\tbeta=node1.evaluation;\n\t\t\t\t\t\tif(beta<alpha) {\n\t\t\t\t\t\t\tskippedAlphaBeta+=node.children.length-1-i;\n\t\t\t\t\t\t\t//console.log(\"alpha-beta skipped\",node.children.length-1-i,\"nodes\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else\n\t\t\t\t\tcandidateChildren=node.children;\n\t\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop) {\n\t\t\t\t\tvar candidateChildren0=[];\n\t\t\t\t\tfor(var i=0;i<candidateChildren.length;i++)\n\t\t\t\t\t\tif(!(candidateChildren[i].n.sign in visited))\n\t\t\t\t\t\t\tcandidateChildren0.push(candidateChildren[i]);\n\t\t\t\t\tcandidateChildren=candidateChildren0;\n\t\t\t\t}\n\t\t\t\tvar bestChildren=[], bestUCB;\n\t\t\t\tvar parentVisitsLog;\n\t\t\t\tif(uctParams.directVisits)\n\t\t\t\t\tparentVisitsLog=Math.log(parentVisits);\n\t\t\t\telse\n\t\t\t\t\tparentVisitsLog=Math.log(node.visits);\n\t\t\t\t\n\t\t\t\tfunction PickBestChildren() {\n\t\t\t\t\tfor(var i=0;i<candidateChildren.length;i++) {\n\t\t\t\t\t\tvar child1=candidateChildren[i];\n\t\t\t\t\t\tvar node1=child1.n;\n\t\t\t\t\t\tif(node1.known)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tvar value=(node1.evaluation*node1.who+1)/2; // ensures value between 0 and 1\n\t\t\t\t\t\tvar ucb;\n\t\t\t\t\t\tif(uctParams.directVisits)\n\t\t\t\t\t\t\tucb=value+uctParams.c*Math.sqrt(parentVisitsLog/child1.f);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tucb=value+uctParams.c*Math.sqrt(parentVisitsLog/node1.visits);\n\t\t\t\t\t\tif(bestChildren.length==0 || ucb>=bestUCB) {\n\t\t\t\t\t\t\tif(bestChildren.length>0 && ucb>bestUCB)\n\t\t\t\t\t\t\t\tbestChildren=[];\n\t\t\t\t\t\t\tbestUCB=ucb;\n\t\t\t\t\t\t\tbestChildren.push(child1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\t * redistribute evaluations uniformly between 0 and 1 (excluded) \n\t\t\t\t */\n\t\t\t\tfunction PickBestChildrenDistributeEval() {\n\n\t\t\t\t\tvar childrenDE={};\n\t\t\t\t\tvar values=[];\n\t\t\t\t\tfor(var i=0;i<candidateChildren.length;i++) {\n\t\t\t\t\t\tvar child1=candidateChildren[i];\n\t\t\t\t\t\tvar node1=child1.n;\n\t\t\t\t\t\tif(node1.known)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tvar value=(node1.evaluation*node1.who+1)/2; // ensures value between 0 and 1\n\t\t\t\t\t\tif(childrenDE[value]===undefined) {\n\t\t\t\t\t\t\tchildrenDE[value]=[];\n\t\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchildrenDE[value].push(child1);\n\t\t\t\t\t}\n\t\t\t\t\tvalues.sort(function(v1,v2) {\n\t\t\t\t\t\treturn v1-v2;\n\t\t\t\t\t});\n\t\t\t\t\tvar step=1/(values.length+1);\n\t\t\t\t\tvar index=0;\n\t\t\t\t\tfor(var vi=0; vi<values.length;vi++) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tvar value0=values[vi];\n\t\t\t\t\t\tvar children=childrenDE[value0];\n\t\t\t\t\t\tvar value1=step*index;\n\t\t\t\t\t\tfor(var i=0;i<children.length;i++) {\n\t\t\t\t\t\t\tvar child1=children[i];\n\t\t\t\t\t\t\tvar node1=child1.n;\n\t\t\t\t\t\t\tvar ucb;\n\t\t\t\t\t\t\tif(uctParams.directVisits)\n\t\t\t\t\t\t\t\tucb=value1+uctParams.c*Math.sqrt(parentVisitsLog/child1.f);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tucb=value1+uctParams.c*Math.sqrt(parentVisitsLog/node1.visits);\n\t\t\t\t\t\t\tif(bestChildren.length==0 || ucb>=bestUCB) {\n\t\t\t\t\t\t\t\tif(bestChildren.length>0 && ucb>bestUCB)\n\t\t\t\t\t\t\t\t\tbestChildren=[];\n\t\t\t\t\t\t\t\tbestUCB=ucb;\n\t\t\t\t\t\t\t\tbestChildren.push(child1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(uctParams.distributeEval)\n\t\t\t\t\tPickBestChildrenDistributeEval();\n\t\t\t\telse\n\t\t\t\t\tPickBestChildren()\n\t\t\t\t\n\t\t\t\tif(bestChildren.length==0) // all child nodes are known\n\t\t\t\t\treturn;\n\t\t\t\tvar child=bestChildren[Math.floor(Math.random()*bestChildren.length)];\n\t\t\t\tif(uctParams.directVisits) {\n\t\t\t\t\tchild.f++;\n\t\t\t\t\tparentVisits=child.f;\n\t\t\t\t}\n\t\t\t\tnode=child.n;\n\t\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop)\n\t\t\t\t\tvisited[node.sign]=1;\n\t\t\t\tdepth++;\n\t\t\t\tmoves.push(child.m);\n\t\t\t\tboard.ApplyMove(aGame,child.m);\n\t\t\t\taGame.AddVisit(board);\n\t\t\t\tboard.mMoves=[];\n\t\t\t\tsignatures.push(board.GetSignature());\n\t\t\t\tif(aGame.mOptions.uctTransposition==\"states\")\n\t\t\t\t\tpathSign^=TransformInteger(board.GetSignature()); // consider the states we have been through but not their order\n\t\t\t\tboard.mWho=-board.mWho;\n\t\t\t}\n\t\t\t\n\t\t\t// Expand\n\t\t\tif(node==rootNode || node.visits>=uctParams.minVisitsExpand) {\n\t\t\t\tif(!board.mMoves || board.mMoves.length==0)\n\t\t\t\t\tboard.GenerateMoves(aGame);\n\t\t\t\tif(board.mFinished) { // in some game implementations, ending is detected while generating the moves\n\t\t\t\t\tnode.known=true;\n\t\t\t\t\tnode.evaluation=winnerMap[board.mWinner];\n\t\t\t\t\tPropagateKnown(node);\n\t\t\t\t} else {\n\t\t\t\t\tnode.children=[];\n\t\t\t\t\tvar bestEval=undefined;\n\t\t\t\t\tvar known=true;\n\t\t\t\t\tfor(var i=0;i<board.mMoves.length;i++) {\n\t\t\t\t\t\tvar move=board.mMoves[i];\n\t\t\t\t\t\tvar signatures1=[];\n\t\t\t\t\t\tvar board1=new (aGame.GetBoardClass())(aGame);\n\t\t\t\t\t\tboard1.CopyFrom(board);\n\t\t\t\t\t\tboard1.ApplyMove(aGame,move);\n\t\t\t\t\t\taGame.AddVisit(board1);\n\t\t\t\t\t\tboard1.mMoves=[];\n\t\t\t\t\t\tboard1.mWho=-board1.mWho;\n\t\t\t\t\t\tif(depth>maxDepth)\n\t\t\t\t\t\t\tmaxDepth=depth;\n\t\t\t\t\t\tvar signature=board1.GetSignature();\n\t\t\t\t\t\tsignatures1.push(signature);\n\t\t\t\t\t\tvar sign1;\n\t\t\t\t\t\tif(aGame.mOptions.uctTransposition==\"states\") {\n\t\t\t\t\t\t\tsign1=pathSign^signature; // board signature is not transformed to differentiate the leaf board\n\t\t\t\t\t\t\tsign1^=depth; // depth in signature\n\t\t\t\t\t\t} else if(aGame.mOptions.uctTransposition==\"state\")\n\t\t\t\t\t\t\tsign1=signature; // only final state counts\n\t\t\t\t\t\tvar node1=null;\n\t\t\t\t\t\tif(aGame.mOptions.uctTransposition)\n\t\t\t\t\t\t\tnode1=uctNodes[sign1];\n\t\t\t\t\t\tif(!node1) {\n\t\t\t\t\t\t\tnode1=new Node(node,-node.who);\n\t\t\t\t\t\t\tnodeCount++;\n\t\t\t\t\t\t\tif(aGame.mOptions.uctTransposition) {\n\t\t\t\t\t\t\t\tuctNodes[sign1]=node1;\n\t\t\t\t\t\t\t\tnode1.sign=sign1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tboard1.Evaluate(aGame);\n\t\t\t\t\t\t\tif(board1.mFinished) {\n\t\t\t\t\t\t\t\tnode1.known=true;\n\t\t\t\t\t\t\t\tnode1.evaluation=winnerMap[board1.mWinner]; // 1, -1 or 0\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif(isNaN(board1.mEvaluation))\n\t\t\t\t\t\t\t\t\tconsole.error(\"Evaluation in not a number !\",board1.mEvaluation);\n\t\t\t\t\t\t\t\tnode1.evaluation=Playout(node1,board1,signatures1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnode1.staticEvalSum=node1.evaluation;\n\t\t\t\t\t\t\tnode1.staticEvalCount=1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tredundantNodeCount++;\n\t\t\t\t\t\t\tnode1.addParent(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(node1.known==false)\n\t\t\t\t\t\t\tknown=false;\n\t\t\t\t\t\tvar nodeChain={\n\t\t\t\t\t\t\tn: node1,\n\t\t\t\t\t\t\tm: (new (aGame.GetMoveClass())(move)).Strip(), // Save memory by stripping the stored move\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(uctParams.directVisits)\n\t\t\t\t\t\t\tnodeChain.f=1;\n\t\t\t\t\t\tnode.children.push(nodeChain);\n\t\t\t\t\t\tvar _eval=node1.evaluation*node1.who;\n\t\t\t\t\t\tif(bestEval===undefined || _eval>bestEval*node1.who)\n\t\t\t\t\t\t\tbestEval=node1.evaluation;\n\t\t\t\t\t\tfor(var j=0;j<signatures1.length;j++)\n\t\t\t\t\t\t\taGame.RemoveVisit(null,signatures1[j]);\n\t\t\t\t\t}\n\t\t\t\t\tnode.evaluation=bestEval;\n\t\t\t\t\tPropagateEval(node,uctParams.propagateMultiVisits?board.mMoves.length:1);\n\t\t\t\t\tif(uctParams.directVisits)\n\t\t\t\t\t\tfor(var i=0;i<nodePath.length;i++)\n\t\t\t\t\t\t\tnodePath[i].visits+=uctParams.propagateMultiVisits?board.mMoves.length:1;\n\t\t\t\t\t\n\t\t\t\t\tif(known) {\n\t\t\t\t\t\tnode.known=true;\n\t\t\t\t\t\tPropagateKnown(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(node.known)\n\t\t\t\treturn;\n\n\t\t\t// Simulate\n\t\t\tfunction Playout(node,board,signatures) {\n\t\t\t\tvar result=null;\n\t\t\t\tvar t0=Date.now();\n\t\t\t\tfor(var depth=0;depth<uctParams.playoutDepth || board.mWho==uctParams.playoutCeil*rootNode.who;depth++) {\n\t\t\t\t\tif(!board.mMoves || board.mMoves.length==0)\n\t\t\t\t\t\tboard.GenerateMoves(aGame);\n\t\t\t\t\tif(board.mFinished) {\n\t\t\t\t\t\tresult={\n\t\t\t\t\t\t\tfinished: true,\n\t\t\t\t\t\t\twinner: winnerMap[board.mWinner],\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tvar weightedMoves=[];\n\t\t\t\t\tfor(var i=0;i<board.mMoves.length;i++) {\n\t\t\t\t\t\tvar board1=new (aGame.GetBoardClass())(aGame);\n\t\t\t\t\t\tboard1.CopyFrom(board);\n\t\t\t\t\t\tboard1.ApplyMove(aGame,board.mMoves[i]);\n\t\t\t\t\t\taGame.AddVisit(board1);\n\t\t\t\t\t\tboard1.mMoves=[];\n\t\t\t\t\t\tboard1.Evaluate(aGame);\n\t\t\t\t\t\tvar evaluation=board1.mEvaluation;\n\t\t\t\t\t\tif(board1.mFinished) {\n\t\t\t\t\t\t\tif(board1.mWinner==1)\n\t\t\t\t\t\t\t\tevaluation=Number.MAX_VALUE;\n\t\t\t\t\t\t\telse if(board1.mWinner==-1)\n\t\t\t\t\t\t\t\tevaluation=-Number.MAX_VALUE;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tevaluation=0;\n\t\t\t\t\t\t} else if(isNaN(board1.mEvaluation))\n\t\t\t\t\t\t\tconsole.error(\"Evaluation in not a number !\");\n\n\t\t\t\t\t\tweightedMoves.push({\n\t\t\t\t\t\t\tmove: board.mMoves[i],\n\t\t\t\t\t\t\tevaluation: evaluation,\n\t\t\t\t\t\t\tboard: board1,\n\t\t\t\t\t\t});\n\t\t\t\t\t\taGame.RemoveVisit(board1);\n\t\t\t\t\t}\n\t\t\t\t\tweightedMoves.sort(function(a1,a2) {\n\t\t\t\t\t\tvar ev1=a1.evaluation*board.mWho;\n\t\t\t\t\t\tvar ev2=a2.evaluation*board.mWho;\n\t\t\t\t\t\treturn ev2-ev1;\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t/*\n\t\t\t\t\t * Pick the next move in the playout with a preference for the moves that seem the best.\n\t\t\t\t\t * For instance, with playoutSpread=2, the probability weight to pick the best move is 1/2,\n\t\t\t\t\t * the second best move 1/4, third best 1/8, ...\n\t\t\t\t\t * If several moves have the same quality, they have the same probability.\n\t\t\t\t\t */\n\t\t\t\t\tvar n=weightedMoves.length;\n\t\t\t\t\tvar r=1/uctParams.playoutSpread;\n\t\t\t\t\tvar max=(1-Math.pow(r,n+1))/(1-r)-1;\n\t\t\t\t\tvar rnd=Math.random()*max;\n\t\t\t\t\tvar equalMoves, lastEval=undefined, cursor=0, reached=false;\n\t\t\t\t\tfor(var i=0;i<n;i++) {\n\t\t\t\t\t\tvar wMove=weightedMoves[i];\n\t\t\t\t\t\tvar ev=wMove.evaluation;\n\t\t\t\t\t\tif(ev!==lastEval) {\n\t\t\t\t\t\t\tif(reached) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tequalMoves=[wMove];\n\t\t\t\t\t\t\t\tlastEval=ev;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tequalMoves.push(wMove);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcursor+=Math.pow(r,i+1);\n\t\t\t\t\t\tif(cursor>=rnd)\n\t\t\t\t\t\t\treached=true;\n\t\t\t\t\t}\n\t\t\t\t\tvar pickedMove=equalMoves[Math.floor(Math.random()*equalMoves.length)];\n\n\t\t\t\t\tboard=pickedMove.board;\n\t\t\t\t\taGame.AddVisit(board);\n\t\t\t\t\tsignatures.push(board.GetSignature()); // remember the board state signature so it can be removed later \n\t\t\t\t\tboard.mWho=-board.mWho;\n\t\t\t\t\tif(board.mFinished) {\n\t\t\t\t\t\tresult={\n\t\t\t\t\t\t\tfinished: true,\n\t\t\t\t\t\t\twinner: winnerMap[board.mWinner],\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(result===null) {\n\t\t\t\t\tresult={\n\t\t\t\t\t\tfinished: false,\n\t\t\t\t\t\teval: board.mEvaluation\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// update stats\n\t\t\t\tpoDur+=Date.now()-t0;\n\t\t\t\tpoCount++;\n\n\t\t\t\tvar nodeEval;\n\t\t\t\tif(result.finished)\n\t\t\t\t\tnodeEval=result.winner; // 1, -1 or 0\n\t\t\t\telse {\n\t\t\t\t\tif(uctParams.debugRawEval)\n\t\t\t\t\t\tnode.rawEval=result.eval;\n\t\t\t\t\tvar normEval=NormalizeEval(result.eval);\n\t\t\t\t\tUpdateDepthEval(normEval,node.depth);\n\t\t\t\t\tnodeEval=normEval;\n\t\t\t\t}\n\t\t\t\treturn nodeEval;\n\t\t\t}\n\t\t\tvar evaluation=Playout(node,board,signatures);\n\t\t\tnode.staticEvalSum+=evaluation;\n\t\t\tnode.staticEvalCount++;\n\t\t\tnode.evaluation=node.staticEvalSum/node.staticEvalCount; // averaging normalized evaluations might not be the best way to get an accurate result\n\t\t\tPropagateEval(node,1);\n\t\t\tif(uctParams.directVisits)\n\t\t\t\tfor(var i=0;i<nodePath.length;i++)\n\t\t\t\t\tnodePath[i].visits++;\n\t\t}\n\t\t\n\t\tvar evalWeights=[];\n\t\t/*\n\t\t * Update the evaluation weight for the given depth in order to balance evaluation propagation\n\t\t */\n\t\tfunction UpdateDepthEval(evaluation,depth) {\n\t\t\twhile(evalWeights.length<=depth) \n\t\t\t\tevalWeights.push({\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tsum: 0\n\t\t\t\t});\n\t\t\tvar weight=evalWeights[depth];\n\t\t\tweight.sum+=evaluation;\n\t\t\tweight.count++;\n\t\t}\n\t\t/*\n\t\t * \n\t\t */\n\t\tfunction WeightEval(evaluation,depth) {\n\t\t\tvar weight=evalWeights[depth];\n\t\t\tif(weight===undefined) { // why does this happen, even if very rare ? :(\n\t\t\t\twhile(evalWeights.length<depth) \n\t\t\t\t\tevalWeights.push({\n\t\t\t\t\t\tcount: 0,\n\t\t\t\t\t\tsum: 0\n\t\t\t\t\t});\n\t\t\t\tevalWeights.push({\n\t\t\t\t\tcount: 1,\n\t\t\t\t\tsum: evaluation\n\t\t\t\t});\n\t\t\t\treturn evaluation;\n\t\t\t}\n\t\t\tvar average=weight.count>0?weight.sum/weight.count:0;\n\t\t\tif(evaluation>average) {\n\t\t\t\tevaluation=(evaluation-average)/(1-average);\n\t\t\t} else if(evaluation<average) {\n\t\t\t\tevaluation=-(average-evaluation)/(average+1);\n\t\t\t}\n\t\t\treturn evaluation;\n\t\t}\n\n\t\tif(aGame.mBoard.mMoves.length==0)\n\t\t\taGame.mBoard.GenerateMoves(aGame);\n\t\tif(aGame.mBoard.mMoves.length==1) { // only one possible move: pick it\n\t\t\taGame.mBestMoves=[aGame.mBoard.mMoves[0]];\n\t\t\tJocUtil.schedule(aGame, \"Done\", {});\n\t\t\treturn;\n\t\t}\n\t\tif(aGame.mBoard.mMoves.length==0) {\n\t\t\tconsole.error(\"No move available\",aGame);\n\t\t\tdebugger;\n\t\t}\n\t\tvar rootNode=new Node(null,-aGame.mWho);\n\t\tnodeCount++;\n\t\tif(aGame.mOptions.uctTransposition)\n\t\t\tuctNodes[aGame.mBoard.GetSignature()]=rootNode;\n\t\t\n\t\tvar t0=Date.now();\n\t\tvar lastProgressPercent=-1;\n\t\tfunction Run() {\n\t\t\tif(aGame.mAborted) {\n\t\t\t\taGame.mAbortCallback.call(aGame);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar now=Date.now();\n\t\t\tvar progressPercent=0;\n\t\t\tif(uctParams.maxDuration>0)\n\t\t\t\tprogressPercent=Math.round(100*(now-t0)/(uctParams.maxDuration*1000));\n\t\t\tif(uctParams.maxLoops>0)\n\t\t\t\tprogressPercent=Math.max(progressPercent,100*loopCount/uctParams.maxLoops);\n\t\t\tif(uctParams.maxNodes>0)\n\t\t\t\tprogressPercent=Math.max(progressPercent,100*nodeCount/uctParams.maxNodes);\n\t\t\tif(progressPercent!=lastProgressPercent) {\n\t\t\t\tlastProgressPercent=progressPercent;\n\t\t\t\tif(aGame.mProgressCallback)\n\t\t\t\t\taGame.mProgressCallback(progressPercent);\n\t\t\t}\n\t\t\tif(!rootNode.children || (rootNode.known==false &&\n\t\t\t\t\t(uctParams.maxDuration<=0 || now<uctParams.maxDuration*1000+t0) &&\n\t\t\t\t\t(uctParams.maxLoops<=0 || loopCount<uctParams.maxLoops) &&\n\t\t\t\t\t(uctParams.maxNodes<=0 || nodeCount<uctParams.maxNodes)\n\t\t\t\t)) {\n\t\t\t\tdo {\n\t\t\t\t\tsignatures=[];\n\t\t\t\t\ttry {\n\t\t\t\t\t\tStep();\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tconsole.error(\"UCT step\",e);\n\t\t\t\t\t\tdebugger;\n\t\t\t\t\t}\n\t\t\t\t\tfor(var i=0;i<signatures.length;i++)\n\t\t\t\t\t\taGame.RemoveVisit(null,signatures[i]);\n\t\t\t\t} while(Date.now()-100<now);\n\t\t\t\tsetTimeout(Run,0);\n\t\t\t} else {\n\t\t\t\tif(uctParams.log) {\n\t\t\t\t\tReportStats(rootNode);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bestEval=undefined;\n\t\t\t\taGame.mBestMoves=[];\n\t\t\t\tif(uctParams.pickMove==\"maxvisits\" && uctParams.directVisits) {\n\t\t\t\t\tfor(var i=0;i<rootNode.children.length;i++) {\n\t\t\t\t\t\tvar child=rootNode.children[i];\n\t\t\t\t\t\tvar node=child.n;\n\t\t\t\t\t\tif(node.evaluation==node.who) {\n\t\t\t\t\t\t\taGame.mBestMoves.push(child.m);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(aGame.mBestMoves.length==0) {\n\t\t\t\t\t\tfor(var i=0;i<rootNode.children.length;i++) {\n\t\t\t\t\t\t\tvar child=rootNode.children[i];\n\t\t\t\t\t\t\tif(bestEval===undefined || bestEval<=child.f) {\n\t\t\t\t\t\t\t\tif(bestEval===undefined || bestEval<child.f)\n\t\t\t\t\t\t\t\t\taGame.mBestMoves=[];\n\t\t\t\t\t\t\t\tbestEval=child.f;\n\t\t\t\t\t\t\t\taGame.mBestMoves.push(child.m);\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar bestEval2=undefined;\n\t\t\t\t\tvar candidateChildren=[];\n\t\t\t\t\tif(uctParams.pickMove==\"besteval-multivisits\")\n\t\t\t\t\t\trootNode.children.forEach(function(child) {\n\t\t\t\t\t\t\tif(child.n.visits>1 || child.n.known==true)\n\t\t\t\t\t\t\t\tcandidateChildren.push(child);\n\t\t\t\t\t\t});\n\t\t\t\t\tif(candidateChildren.length==0)\n\t\t\t\t\t\tcandidateChildren=rootNode.children;\n\t\t\t\t\tfor(var i=0;i<candidateChildren.length;i++) {\n\t\t\t\t\t\tvar child=candidateChildren[i];\n\t\t\t\t\t\tvar node=child.n;\n\t\t\t\t\t\tvar staticEval=node.staticEvalSum/node.staticEvalCount;\n\t\t\t\t\t\tif(bestEval===undefined || bestEval>=node.evaluation*rootNode.who) {\n\t\t\t\t\t\t\tif(bestEval===undefined || bestEval>node.evaluation*rootNode.who || (\n\t\t\t\t\t\t\t\tbestEval==node.evaluation*rootNode.who && (\n\t\t\t\t\t\t\t\t\t\tbestEval2===undefined || bestEval2>rootNode.who*staticEval\n\t\t\t\t\t\t\t\t\t\t))) {\n\t\t\t\t\t\t\t\tbestEval2=staticEval;\n\t\t\t\t\t\t\t\taGame.mBestMoves=[];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbestEval=node.evaluation*rootNode.who;\n\t\t\t\t\t\t\taGame.mBestMoves.push(child.m);\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tJocUtil.schedule(aGame, \"Done\", {});\n\t\t\t}\n\t\t}\n\t\tRun();\n\t\n\t\tfunction ReportStats(node) {\n\t\t\tconsole.log(\"  duration\",Date.now()-t0);\n\t\t\tconsole.log(\"  evaluation:\",node.evaluation);\n\t\t\tconsole.log(\"  fully explored:\",node.known);\n\t\t\tconsole.log(\"  node count:\",nodeCount);\n\t\t\tconsole.log(\"  redundant node count:\",redundantNodeCount);\n\t\t\tconsole.log(\"  max depth:\",maxDepth);\n\t\t\tconsole.log(\"  alpha-beta\",uctParams.useAlphaBeta,\"skipped\",skippedAlphaBeta);\n\t\t\tconsole.log(\" \",loopCount,\"steps, per step\",(Date.now()-t0)/loopCount,\"ms\");\n\t\t\tconsole.log(\" \",poCount,\"playouts\",poDur,\"ms, per playout\",poDur/poCount,\"ms\");\n\t\t\tconsole.log(\"  UCT c\",uctParams.c);\n\t\t\tconsole.log(\"  tree\",rootNode);\n\n\t\t\tfunction ShowMinimax(node,depth) {\n\t\t\t\tif(uctParams.propagation!=\"minimax\" && (uctParams.propagation!=\"mixed\" || uctParams.productRatio>0)) {\n\t\t\t\t\tconsole.warn(\"Cannot display minimax tree on propagation\",uctParams.propagation,\"pp ratio\",uctParams.productRatio);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar indent=\"\";\n\t\t\t\tfor(var i=0;i<depth;i++)\n\t\t\t\t\tindent+=\"  \";\n\t\t\t\tconsole.log(indent+\"*\",depth,\"*\",-node.who,\"eval\",node.evaluation);\n\t\t\t\tfor(var i=0;i<node.children.length;i++) {\n\t\t\t\t\tvar child1=node.children[i];\n\t\t\t\t\tvar node1=child1.n;\n\t\t\t\t\tconsole.log(indent,\"  \"+(node1.evaluation==node.evaluation?\"*\":\" \")+\" move\",(new (aGame.GetMoveClass())(child1.m)).ToString(),\n\t\t\t\t\t\t\t\"visits\",node1.visits,\n\t\t\t\t\t\t\t\"eval\",node1.evaluation,\n\t\t\t\t\t\t\t\"known\",node1.known,\n\t\t\t\t\t\t\t\"sev\",node1.staticEvalSum+\"/\"+node1.staticEvalCount,\n\t\t\t\t\t\t\t\"who\",node1.who,\n\t\t\t\t\t\t\t\"children\",node1.children?node1.children.length:\"no\");\n\t\t\t\t\tif(node1.children && node1.evaluation==node.evaluation)\n\t\t\t\t\t\tShowMinimax(node1,depth+1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(uctParams.showMinimaxTree) {\n\t\t\t\tconsole.log(\"Minimax tree\");\n\t\t\t\tShowMinimax(node,0);\n\t\t\t}\n\t\t\t\n\t\t\tif(uctParams.checkSide) {\n\t\t\t\tvar checkSideNodeCount=0;\n\t\t\t\tvar checkSideError=0;\n\t\t\t\tfunction CheckSide(node) {\n\t\t\t\t\tcheckSideNodeCount++;\n\t\t\t\t\tif(node.children)\n\t\t\t\t\t\tfor(var i=0;i<node.children.length;i++) {\n\t\t\t\t\t\t\tvar child1=node.children[i];\n\t\t\t\t\t\t\tif(child1.n.who!=-node.who)\n\t\t\t\t\t\t\t\tcheckSideError++;\n\t\t\t\t\t\t\tCheckSide(child1.n);\n\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t}\n\t\t\t\tCheckSide(rootNode);\n\t\t\t\tconsole.log(\"  tree side alternance\",\"node\",checkSideNodeCount,\"errors\",checkSideError);\n\t\t\t}\n\t\t}\n\t}\n\n})();\n\n"]}